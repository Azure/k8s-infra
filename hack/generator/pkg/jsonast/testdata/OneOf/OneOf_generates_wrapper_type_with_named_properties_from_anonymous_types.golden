// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// This is a generated file. Please do not make manual changes.
package v20200101

import (
	"encoding/json"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

/*Generated from: https://test.test/schemas/2020-01-01/test.json#/definitions/Foo*/
type Foo int

/*Generated from: https://test.test/schemas/2020-01-01/test.json*/
type Test struct {
	Bool1   *bool        `json:"bool1"`
	Foo     *Foo         `json:"foo"`
	Object2 *TestObject2 `json:"object2"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because Test represents a discriminated union (JSON OneOf)
func (test Test) MarshalJSON() ([]byte, error) {
	if test.Bool1 != nil {
		return json.Marshal(test.Bool1)
	}
	if test.Foo != nil {
		return json.Marshal(test.Foo)
	}
	if test.Object2 != nil {
		return json.Marshal(test.Object2)
	}
	return nil, nil
}

type TestObject2 struct {
	Foo *string `json:"foo"`
}
