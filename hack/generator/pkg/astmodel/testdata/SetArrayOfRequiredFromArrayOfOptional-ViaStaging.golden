// Code generated by k8s-infra. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package vVersion

type Party struct {
	scores []*int `json:"array-optional-int"`
}

type Person struct {
	scores []int `json:"array-required-int"`
}

func (person Person) ConvertFrom(source *Party) error {
	// personTemp is our intermediate for conversion
	var personTemp Party

	// Populate personTemp from source
	personTemp.ConvertFrom(source)

	// scores
	scoresList := make([]int, len(personTemp.scores))
	for scoreIndex, score := range personTemp.scores {
		if score != nil {
			scoresList[scoreIndex] = *score
		} else {
			scoresList[scoreIndex] = 0
		}
	}

	person.scores = scoresList
}

func (person Person) ConvertTo(destination *Party) error {
	// personTemp is our intermediate for conversion
	var personTemp Party

	// scores
	scoresList := make([]*int, len(person.scores))
	for scoreIndex, score := range person.scores {
		scoresList[scoreIndex] = &score
	}

	personTemp.scores = scoresList

	// Populate destination from personTemp
	personTemp.ConvertTo(destination)
}
