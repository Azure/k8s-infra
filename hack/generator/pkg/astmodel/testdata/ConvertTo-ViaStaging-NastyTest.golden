// Code generated by k8s-infra. DO NOT EDIT.
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
package vVersion

type Party struct {
	nasty map[string][]map[string]bool `json:"my-oh-my"`
}

type Person struct {
	nasty map[string][]map[string]bool `json:"my-oh-my"`
}

func (person Person) ConvertTo(destination *Party) error {
	// staging is our intermediate type for conversion
	var staging Party

	// nasty
	nastyMap1 := make(map[string][]map[string]bool)
	for key, nasty2 := range person.nasty {
		nastyList := make([]map[string]bool, len(nasty2))
		for index, nasty1 := range nasty2 {
			nastyMap := make(map[string]bool)
			for key, nasty := range nasty1 {
				nastyMap[key] = nasty
			}

			nastyList[index] = nastyMap
		}

		nastyMap1[key] = nastyList
	}

	staging.nasty = nastyMap1

	// use staging to populate
	staging.ConvertTo(destination)
}
