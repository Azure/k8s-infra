schemaUrl: https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json
outputPath: ../generated/apis
typeFilters:
  - action: prune
    group: definitions
    name: Expression
    because: expression is an ARM template construct which doesn't belong in CRDs
  - action: include
    version: 2020-*
    because: all 2020 API versions are included
  - action: prune
    version: '*preview'
    because: preview SDK versions are excluded by default
  - action: prune
    group: microsoft.apimanagement
    name: ServicePortalsettingsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.documentdb
    name: DatabaseAccountsApisDatabasesSettingsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.web
    name: SitesAppsettingsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.web
    name: SitesConnectionstringsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.web
    name: SitesSlotsConnectionstringsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.web
    name: SitesSlotsAppsettingsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.compute
    name: VirtualMachineScaleSetsExtensionsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.compute
    name: VirtualMachinesExtensionsChildResource
    because: _childResource type which "points" to a resource type that doesn't exist. Need to work with schema owners on why.
  - action: prune
    group: microsoft.automation
    name: AutomationAccountsRunbooksDraftChildResource
    because: Uses OneOf in a weird way that makes detecting actual resource difficult, skipping for now.
  - action: prune
    group: microsoft.web
    version: '*2018*'
    because: Some types (SitesSlotsConfig) use OneOf in a way we don't currently handle.
  - action: prune
    group: microsoft.kusto
    because: Some types use OneOf in a way we don't currently handle correctly.
  - action: prune
    group: microsoft.timeseriesinsights
    version: v20171115
    because: Some types use OneOf in a way we don't currently handle.
  - action: prune
    group: microsoft.storage
    version: v20190401
    name: StorageAccountsFileServices*
    because: _childResource type which was added to API version later and not included in the 2015-01-01 rollup spec.
  - action: prune
    group: microsoft.datafactory
    version: v20180601
    name: FactoriesManagedVirtualNetworks*
    because: _childResource type which was added to API version later and not included in the 2015-01-01 rollup spec.
  - action: prune
    group: microsoft.aad
    version: v20170601
    name: DomainServicesOuContainer*
    because: _childResource type which was added to API version later and not included in the 2015-01-01 rollup spec.
exportFilters:
  - action: exclude
    group: definitions
    name: NumberOrExpression
    because: this type is not really used, it's just float64. We remap this type to float64 in typetransformers so we can skip exporting it too
  - action: exclude
    group: definitions
    name: '*ResourceBase*'
    because: Not actually a resource, used for inheritance only.
  - action: exclude
    group: deploymenttemplate
    name: '*ResourceBase*'
    because: Not actually a resource, used for inheritance only.

# Exclusions for packages that currently produce types including AnyType.
# TODO: get rid of these, either by chasing the teams generating
# weird json or by handling them differently in the generator.
anyTypePackages:
  - microsoft.authorization/v20180301
  - microsoft.authorization/v20180501
  - microsoft.authorization/v20190101
  - microsoft.authorization/v20190601
  - microsoft.authorization/v20190901
  - microsoft.automation/v20151031
  - microsoft.cognitiveservices/v20170418
  - microsoft.compute.extensions/v20180601
  - microsoft.compute.extensions/v20181001
  - microsoft.compute.extensions/v20190301
  - microsoft.compute.extensions/v20190701
  - microsoft.compute.galleries/v20180601
  - microsoft.compute.galleries/v20190301
  - microsoft.compute/v20150801
  - microsoft.compute/v20170330
  - microsoft.compute/v20171201
  - microsoft.compute/v20180601
  - microsoft.compute/v20181001
  - microsoft.compute/v20190301
  - microsoft.compute/v20190701
  - microsoft.containerinstance/v20180401
  - microsoft.containerinstance/v20181001
  - microsoft.containerregistry/v20171001
  - microsoft.datafactory/v20180601
  - microsoft.keyvault/v20150601
  - microsoft.logic/v20160601
  - microsoft.logic/v20161001
  - microsoft.logic/v20170701
  - microsoft.machinelearning/v20170101
  - microsoft.machinelearningservices/v20200101
  - microsoft.migrate/v20191001
  - microsoft.netapp/v20170815
  - microsoft.netapp/v20190501
  - microsoft.network/v20170901
  - microsoft.network/v20171001
  - microsoft.network/v20171101
  - microsoft.network/v20180101
  - microsoft.network/v20180201
  - microsoft.network/v20180401
  - microsoft.network/v20180601
  - microsoft.network/v20180701
  - microsoft.network/v20180801
  - microsoft.network/v20180901
  - microsoft.network/v20181001
  - microsoft.network/v20181101
  - microsoft.network/v20181201
  - microsoft.network/v20190201
  - microsoft.network/v20190401
  - microsoft.network/v20190601
  - microsoft.network/v20190701
  - microsoft.network/v20190801
  - microsoft.network/v20190901
  - microsoft.network/v20191101
  - microsoft.network/v20191201
  - microsoft.network/v20200301
  - microsoft.network/v20200401
  - microsoft.network/v20200501
  - microsoft.recoveryservices/v20160601
  - microsoft.recoveryservices/v20180110
  - microsoft.relay/v20160701
  - microsoft.relay/v20170401
  - microsoft.resources/v20150101
  - microsoft.resources/v20160201
  - microsoft.resources/v20160901
  - microsoft.resources/v20170510
  - microsoft.resources/v20180501
  - microsoft.resources/v20190501
  - microsoft.servicebus/v20170401
  - microsoft.storage/v20190601
  - microsoft.streamanalytics/v20160301
  - microsoft.vmwarecloudsimple/v20190401
  - microsoft.web/v20140601
  - microsoft.web/v20150801
  - microsoft.web/v20160601
  # The following end up with AnyType in Status
  - microsoft.apimanagement/v20190101
  - microsoft.containerservice/v20180331
  - microsoft.containerservice/v20190601
  - microsoft.insights/v20150501
  - microsoft.insights/v20160301
  - microsoft.insights/v20170401
  - microsoft.insights/v20180301
  - microsoft.insights/v20180416
  - microsoft.insights/v20190301
  - microsoft.powerbi/v20160129

typeTransformers:
  - group: definitions
    name: NumberOrExpression
    because: NumberOrExpression is an ARM template artifact that doesn't make sense in CRDs
    target:
      name: float
  - name: "*"
    property: Tags
    ifType: 
        map:
          key:
            name: string
          value:
            name: any
    target:
      map:
        key: 
          name: string
        value:
          name: string
    because: Tags is defined as map[string]interface{} when it should be map[string]string

  # Removing map[string]interfaces{} that happen because the type has
  # only readonly properties that have all been removed in the swagger
  # -> deployment template conversion.

  - group: deploymenttemplate
    name: ResourceLocations
    target:
      name: string
    because: Modeling this as an enum doesn't work well in the context of CRDs because new regions are regularly added

  - group: microsoft.eventgrid
    version: v20190601
    name: Domains_Spec
    property: Properties
    remove: true
    because: it has no writable properties in swagger

  - group: microsoft.eventgrid
    version: "*"
    name: Topics_Spec
    property: Properties
    remove: true
    because: it has no writable properties in swagger

status:
  schemaRoot: "./azure-rest-api-specs/specification"

  # the configuration below is copied from the ARM schema repo:
  # https://github.com/Azure/azure-resource-manager-schemas/blob/master/generator/autogenlist.ts
  overrides: [
    {
        basePath: 'blueprint/resource-manager',
        namespace: 'Microsoft.Blueprint',
        resourceConfig: [
            {
                type: 'blueprintAssignments',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/artifacts',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/versions',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
        ]
    },
    {
        basePath: 'customproviders/resource-manager',
        namespace: 'Microsoft.CustomProviders',
        resourceConfig: [
            {
                type: 'associations',
                scopes: ScopeType.Extension,
            },
        ],
    },
    {
        basePath: 'consumption/resource-manager',
        namespace: 'Microsoft.Consumption',
        resourceConfig: [
            {
                type: 'budgets',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
    },
    {
      basePath: 'digitaltwins/resource-manager',
      resourceConfig: [
          {
              type: 'integrationResources',
              scopes: ScopeType.Extension,
          }
      ]
    },
    {
        basePath: 'deviceprovisioningservices/resource-manager',
        suffix: 'Provisioning',
    },
    {
        basePath: 'frontdoor/resource-manager',
        suffix: 'FrontDoor',
    },
    { 
        basePath: 'eventgrid/resource-manager',
        resourceConfig: [
            {
                type: 'eventSubscriptions',
                scopes: ScopeType.Extension | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
        ],
    },
    {
        basePath: 'machinelearning/resource-manager',
        postProcessor: machineLearningPostProcessor,
    },
    {
        basePath: 'managednetwork/resource-manager',
        resourceConfig: [
            {
                type: 'scopeAssignments',
                scopes: ScopeType.Subcription,
            },
        ],
    },
    {
        basePath: 'policyinsights/resource-manager',
        resourceConfig: [
            {
                type: 'remediations',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.ManagementGroup,
            }
        ]
    },
    {
        basePath: 'resources/resource-manager',
        resourceConfig: [
            {
                type: 'deployments',
                scopes: ScopeType.Tenant | ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
            {
                type: 'tags',
                scopes: ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
        postProcessor: resourcesPostProcessor,
    },
    {
        basePath: 'storSimple1200Series/resource-manager',
        suffix: '1200'
    },
    { 
        basePath: 'storsimple8000series/resource-manager',
        suffix: '8000',
    },
    {
        basePath: 'softwareplan/resource-manager',
        resourceConfig: [
            {
                type: 'hybridUseBenefits',
                scopes: ScopeType.Extension,
            },
        ]
    },
  ]
