schemaUrl: https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json
outputPath: apis
typeFilters:
  - action: prune
    group: definitions
    name: Expression
    because: expression is an ARM template construct which doesn't belong in CRDs
  - action: include
    version: 2020-*
    because: all 2020 API versions are included
  - action: prune
    version: '*preview'
    because: preview SDK versions are excluded by default
exportFilters:
  - action: exclude
    group: deploymenttemplate
    because: this is the "container" group that holds references to all of the other groups and as such doesn't make sense to generate
  - action: exclude
    group: definitions
    name: NumberOrExpression
    because: this type is not really used, it's just float64. We remap this type to float64 in typetransformers so we can skip exporting it too
  - action: exclude
    group: definitions
    name: ResourceBase
    because: this type is not used
typeTransformers:
  - group: definitions
    name: NumberOrExpression
    because: NumberOrExpression is an ARM template artifact that doesn't make sense in CRDs
    target:
      name: float

status:
  schemaRoot: "./azure-rest-api-specs/specification"

  # the configuration below is copied from the ARM schema repo:
  # https://github.com/Azure/azure-resource-manager-schemas/blob/master/generator/autogenlist.ts
  schemas: [
    {
        basePath: 'blueprint/resource-manager',
        namespace: 'Microsoft.Blueprint',
        resourceConfig: [
            {
                type: 'blueprintAssignments',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/artifacts',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
            {
                type: 'blueprints/versions',
                scopes: ScopeType.Subcription | ScopeType.ManagementGroup,
            },
        ]
    },
    {
        basePath: 'customproviders/resource-manager',
        namespace: 'Microsoft.CustomProviders',
        resourceConfig: [
            {
                type: 'associations',
                scopes: ScopeType.Extension,
            },
        ],
    },
    {
        basePath: 'consumption/resource-manager',
        namespace: 'Microsoft.Consumption',
        resourceConfig: [
            {
                type: 'budgets',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
    },
    {
      basePath: 'digitaltwins/resource-manager',
      resourceConfig: [
          {
              type: 'integrationResources',
              scopes: ScopeType.Extension,
          }
      ]
    },
    {
        basePath: 'deviceprovisioningservices/resource-manager',
        suffix: 'Provisioning',
    },
    {
        basePath: 'frontdoor/resource-manager',
        suffix: 'FrontDoor',
    },
    { 
        basePath: 'eventgrid/resource-manager',
        resourceConfig: [
            {
                type: 'eventSubscriptions',
                scopes: ScopeType.Extension | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
        ],
    },
    {
        basePath: 'machinelearning/resource-manager',
        postProcessor: machineLearningPostProcessor,
    },
    {
        basePath: 'managednetwork/resource-manager',
        resourceConfig: [
            {
                type: 'scopeAssignments',
                scopes: ScopeType.Subcription,
            },
        ],
    },
    {
        basePath: 'policyinsights/resource-manager',
        resourceConfig: [
            {
                type: 'remediations',
                scopes: ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.ManagementGroup,
            }
        ]
    },
    {
        basePath: 'resources/resource-manager',
        resourceConfig: [
            {
                type: 'deployments',
                scopes: ScopeType.Tenant | ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup,
            },
            {
                type: 'tags',
                scopes: ScopeType.ManagementGroup | ScopeType.Subcription | ScopeType.ResourceGroup | ScopeType.Extension,
            },
        ],
        postProcessor: resourcesPostProcessor,
    },
    {
        basePath: 'storSimple1200Series/resource-manager',
        suffix: '1200'
    },
    { 
        basePath: 'storsimple8000series/resource-manager',
        suffix: '8000',
    },
    {
        basePath: 'softwareplan/resource-manager',
        resourceConfig: [
            {
                type: 'hybridUseBenefits',
                scopes: ScopeType.Extension,
            },
        ]
    },
  ]
