// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type BastionHosts struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BastionHosts_Spec  `json:"spec,omitempty"`
	Status            BastionHost_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type BastionHostsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BastionHosts `json:"items"`
}

type BastionHost_Status struct {
	AtProvider BastionHostsObservation `json:"atProvider"`
}

type BastionHosts_Spec struct {
	ForProvider BastionHostsParameters `json:"forProvider"`
}

type BastionHostsObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Represents the bastion host resource.
	Properties *BastionHostPropertiesFormat_Status `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type BastionHostsParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion BastionHostsSpecApiVersion `json:"apiVersion"`
	Comments   *string                    `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Represents the bastion host resource.
	Properties BastionHostPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type BastionHostsSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/BastionHostPropertiesFormat
type BastionHostPropertiesFormat struct {

	//DnsName: FQDN for the endpoint on which bastion host is accessible.
	DnsName *string `json:"dnsName,omitempty"`

	//IpConfigurations: IP configuration of the Bastion Host resource.
	IpConfigurations []BastionHostIPConfiguration `json:"ipConfigurations,omitempty"`
}

//Generated from:
type BastionHostPropertiesFormat_Status struct {

	//DnsName: FQDN for the endpoint on which bastion host is accessible.
	DnsName *string `json:"dnsName,omitempty"`

	//IpConfigurations: IP configuration of the Bastion Host resource.
	IpConfigurations []BastionHostIPConfiguration_Status `json:"ipConfigurations,omitempty"`

	//ProvisioningState: The provisioning state of the bastion host resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type BastionHostsSpecApiVersion string

const BastionHostsSpecApiVersion20200501 = BastionHostsSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/bastionHosts"}
type BastionHostsSpecType string

const BastionHostsSpecTypeMicrosoftNetworkBastionHosts = BastionHostsSpecType("Microsoft.Network/bastionHosts")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/BastionHostIPConfiguration
type BastionHostIPConfiguration struct {

	//Name: Name of the resource that is unique within a resource group. This name can
	//be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Represents the ip configuration associated with the resource.
	Properties *BastionHostIPConfigurationPropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type BastionHostIPConfiguration_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: Name of the resource that is unique within a resource group. This name can
	//be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Represents the ip configuration associated with the resource.
	Properties *BastionHostIPConfigurationPropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Ip configuration type.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/BastionHostIPConfigurationPropertiesFormat
type BastionHostIPConfigurationPropertiesFormat struct {

	//PrivateIPAllocationMethod: Private IP allocation method.
	PrivateIPAllocationMethod *BastionHostIPConfigurationPropertiesFormatPrivateIPAllocationMethod `json:"privateIPAllocationMethod,omitempty"`

	// +kubebuilder:validation:Required
	//PublicIPAddress: Reference of the PublicIP resource.
	PublicIPAddress SubResource `json:"publicIPAddress"`

	// +kubebuilder:validation:Required
	//Subnet: Reference of the subnet resource.
	Subnet SubResource `json:"subnet"`
}

//Generated from:
type BastionHostIPConfigurationPropertiesFormat_Status struct {

	//PrivateIPAllocationMethod: Private IP allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod_Status `json:"privateIPAllocationMethod,omitempty"`

	//ProvisioningState: The provisioning state of the bastion host IP configuration
	//resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	// +kubebuilder:validation:Required
	//PublicIPAddress: Reference of the PublicIP resource.
	PublicIPAddress SubResource_Status `json:"publicIPAddress"`

	// +kubebuilder:validation:Required
	//Subnet: Reference of the subnet resource.
	Subnet SubResource_Status `json:"subnet"`
}

// +kubebuilder:validation:Enum={"Dynamic","Static"}
type BastionHostIPConfigurationPropertiesFormatPrivateIPAllocationMethod string

const (
	BastionHostIPConfigurationPropertiesFormatPrivateIPAllocationMethodDynamic = BastionHostIPConfigurationPropertiesFormatPrivateIPAllocationMethod("Dynamic")
	BastionHostIPConfigurationPropertiesFormatPrivateIPAllocationMethodStatic  = BastionHostIPConfigurationPropertiesFormatPrivateIPAllocationMethod("Static")
)

func init() {
	SchemeBuilder.Register(&BastionHosts{}, &BastionHostsList{})
}
