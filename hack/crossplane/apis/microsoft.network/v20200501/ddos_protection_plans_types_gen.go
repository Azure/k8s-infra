// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type DdosProtectionPlans struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DdosProtectionPlans_Spec  `json:"spec,omitempty"`
	Status            DdosProtectionPlan_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type DdosProtectionPlansList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DdosProtectionPlans `json:"items"`
}

type DdosProtectionPlan_Status struct {
	AtProvider DdosProtectionPlansObservation `json:"atProvider"`
}

type DdosProtectionPlans_Spec struct {
	ForProvider DdosProtectionPlansParameters `json:"forProvider"`
}

type DdosProtectionPlansObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the DDoS protection plan.
	Properties *DdosProtectionPlanPropertiesFormat_Status `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type DdosProtectionPlansParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion DdosProtectionPlansSpecApiVersion `json:"apiVersion"`
	Comments   *string                           `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location *string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the DDoS protection plan.
	Properties v1.JSON `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type DdosProtectionPlansSpecType `json:"type"`
}

//Generated from:
type DdosProtectionPlanPropertiesFormat_Status struct {

	//ProvisioningState: The provisioning state of the DDoS protection plan resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//ResourceGuid: The resource GUID property of the DDoS protection plan resource.
	//It uniquely identifies the resource, even if the user changes its name or
	//migrate the resource across subscriptions or resource groups.
	ResourceGuid *string `json:"resourceGuid,omitempty"`

	//VirtualNetworks: The list of virtual networks associated with the DDoS
	//protection plan resource. This list is read-only.
	VirtualNetworks []SubResource_Status `json:"virtualNetworks,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type DdosProtectionPlansSpecApiVersion string

const DdosProtectionPlansSpecApiVersion20200501 = DdosProtectionPlansSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/ddosProtectionPlans"}
type DdosProtectionPlansSpecType string

const DdosProtectionPlansSpecTypeMicrosoftNetworkDdosProtectionPlans = DdosProtectionPlansSpecType("Microsoft.Network/ddosProtectionPlans")

func init() {
	SchemeBuilder.Register(&DdosProtectionPlans{}, &DdosProtectionPlansList{})
}
