// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type PrivateLinkServices struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PrivateLinkServices_Spec  `json:"spec,omitempty"`
	Status            PrivateLinkService_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type PrivateLinkServicesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrivateLinkServices `json:"items"`
}

type PrivateLinkService_Status struct {
	AtProvider PrivateLinkServicesObservation `json:"atProvider"`
}

type PrivateLinkServices_Spec struct {
	ForProvider PrivateLinkServicesParameters `json:"forProvider"`
}

type PrivateLinkServicesObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the private link service.
	Properties *PrivateLinkServiceProperties_Status `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type PrivateLinkServicesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion PrivateLinkServicesSpecApiVersion `json:"apiVersion"`
	Comments   *string                           `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the private link service.
	Properties PrivateLinkServiceProperties `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type PrivateLinkServicesSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PrivateLinkServiceProperties
type PrivateLinkServiceProperties struct {

	//AutoApproval: The auto-approval list of the private link service.
	AutoApproval *PrivateLinkServicePropertiesAutoApproval `json:"autoApproval,omitempty"`

	//EnableProxyProtocol: Whether the private link service is enabled for proxy
	//protocol or not.
	EnableProxyProtocol *bool `json:"enableProxyProtocol,omitempty"`

	//Fqdns: The list of Fqdn.
	Fqdns []string `json:"fqdns,omitempty"`

	//IpConfigurations: An array of private link service IP configurations.
	IpConfigurations []PrivateLinkServiceIpConfiguration `json:"ipConfigurations,omitempty"`

	//LoadBalancerFrontendIpConfigurations: An array of references to the load
	//balancer IP configurations.
	LoadBalancerFrontendIpConfigurations []SubResource `json:"loadBalancerFrontendIpConfigurations,omitempty"`

	//Visibility: The visibility list of the private link service.
	Visibility *PrivateLinkServicePropertiesVisibility `json:"visibility,omitempty"`
}

//Generated from:
type PrivateLinkServiceProperties_Status struct {

	//Alias: The alias of the private link service.
	Alias *string `json:"alias,omitempty"`

	//AutoApproval: The auto-approval list of the private link service.
	AutoApproval *ResourceSet_Status `json:"autoApproval,omitempty"`

	//EnableProxyProtocol: Whether the private link service is enabled for proxy
	//protocol or not.
	EnableProxyProtocol *bool `json:"enableProxyProtocol,omitempty"`

	//Fqdns: The list of Fqdn.
	Fqdns []string `json:"fqdns,omitempty"`

	//IpConfigurations: An array of private link service IP configurations.
	IpConfigurations []PrivateLinkServiceIpConfiguration_Status `json:"ipConfigurations,omitempty"`

	//LoadBalancerFrontendIpConfigurations: An array of references to the load
	//balancer IP configurations.
	LoadBalancerFrontendIpConfigurations []FrontendIPConfiguration_Status `json:"loadBalancerFrontendIpConfigurations,omitempty"`

	//NetworkInterfaces: An array of references to the network interfaces created for
	//this private link service.
	NetworkInterfaces []NetworkInterface_Status `json:"networkInterfaces,omitempty"`

	//PrivateEndpointConnections: An array of list about connections to the private
	//endpoint.
	PrivateEndpointConnections []PrivateEndpointConnection_Status `json:"privateEndpointConnections,omitempty"`

	//ProvisioningState: The provisioning state of the private link service resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//Visibility: The visibility list of the private link service.
	Visibility *ResourceSet_Status `json:"visibility,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type PrivateLinkServicesSpecApiVersion string

const PrivateLinkServicesSpecApiVersion20200501 = PrivateLinkServicesSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/privateLinkServices"}
type PrivateLinkServicesSpecType string

const PrivateLinkServicesSpecTypeMicrosoftNetworkPrivateLinkServices = PrivateLinkServicesSpecType("Microsoft.Network/privateLinkServices")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PrivateLinkServiceIpConfiguration
type PrivateLinkServiceIpConfiguration struct {

	//Name: The name of private link service ip configuration.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the private link service ip configuration.
	Properties *PrivateLinkServiceIpConfigurationProperties `json:"properties,omitempty"`
}

//Generated from:
type PrivateLinkServiceIpConfiguration_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of private link service ip configuration.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the private link service ip configuration.
	Properties *PrivateLinkServiceIpConfigurationProperties_Status `json:"properties,omitempty"`

	//Type: The resource type.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PrivateLinkServicePropertiesAutoApproval
type PrivateLinkServicePropertiesAutoApproval struct {

	//Subscriptions: The list of subscriptions.
	Subscriptions []string `json:"subscriptions,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PrivateLinkServicePropertiesVisibility
type PrivateLinkServicePropertiesVisibility struct {

	//Subscriptions: The list of subscriptions.
	Subscriptions []string `json:"subscriptions,omitempty"`
}

//Generated from:
type ResourceSet_Status struct {

	//Subscriptions: The list of subscriptions.
	Subscriptions []string `json:"subscriptions,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PrivateLinkServiceIpConfigurationProperties
type PrivateLinkServiceIpConfigurationProperties struct {

	//Primary: Whether the ip configuration is primary or not.
	Primary *bool `json:"primary,omitempty"`

	//PrivateIPAddress: The private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6.
	//Default is IPv4.
	PrivateIPAddressVersion *PrivateLinkServiceIpConfigurationPropertiesPrivateIPAddressVersion `json:"privateIPAddressVersion,omitempty"`

	//PrivateIPAllocationMethod: The private IP address allocation method.
	PrivateIPAllocationMethod *PrivateLinkServiceIpConfigurationPropertiesPrivateIPAllocationMethod `json:"privateIPAllocationMethod,omitempty"`

	//Subnet: The reference to the subnet resource.
	Subnet *SubResource `json:"subnet,omitempty"`
}

//Generated from:
type PrivateLinkServiceIpConfigurationProperties_Status struct {

	//Primary: Whether the ip configuration is primary or not.
	Primary *bool `json:"primary,omitempty"`

	//PrivateIPAddress: The private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6.
	//Default is IPv4.
	PrivateIPAddressVersion *IPVersion_Status `json:"privateIPAddressVersion,omitempty"`

	//PrivateIPAllocationMethod: The private IP address allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod_Status `json:"privateIPAllocationMethod,omitempty"`

	//ProvisioningState: The provisioning state of the private link service IP
	//configuration resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//Subnet: The reference to the subnet resource.
	Subnet *Subnet_Status `json:"subnet,omitempty"`
}

// +kubebuilder:validation:Enum={"IPv4","IPv6"}
type PrivateLinkServiceIpConfigurationPropertiesPrivateIPAddressVersion string

const (
	PrivateLinkServiceIpConfigurationPropertiesPrivateIPAddressVersionIPv4 = PrivateLinkServiceIpConfigurationPropertiesPrivateIPAddressVersion("IPv4")
	PrivateLinkServiceIpConfigurationPropertiesPrivateIPAddressVersionIPv6 = PrivateLinkServiceIpConfigurationPropertiesPrivateIPAddressVersion("IPv6")
)

// +kubebuilder:validation:Enum={"Dynamic","Static"}
type PrivateLinkServiceIpConfigurationPropertiesPrivateIPAllocationMethod string

const (
	PrivateLinkServiceIpConfigurationPropertiesPrivateIPAllocationMethodDynamic = PrivateLinkServiceIpConfigurationPropertiesPrivateIPAllocationMethod("Dynamic")
	PrivateLinkServiceIpConfigurationPropertiesPrivateIPAllocationMethodStatic  = PrivateLinkServiceIpConfigurationPropertiesPrivateIPAllocationMethod("Static")
)

func init() {
	SchemeBuilder.Register(&PrivateLinkServices{}, &PrivateLinkServicesList{})
}
