// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type FirewallPolicies struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallPolicies_Spec `json:"spec,omitempty"`
	Status            FirewallPolicy_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type FirewallPoliciesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallPolicies `json:"items"`
}

type FirewallPolicies_Spec struct {
	ForProvider FirewallPoliciesParameters `json:"forProvider"`
}

type FirewallPolicy_Status struct {
	AtProvider FirewallPoliciesObservation `json:"atProvider"`
}

type FirewallPoliciesObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Identity: The identity of the firewall policy.
	Identity *ManagedServiceIdentity_Status `json:"identity,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the firewall policy.
	Properties *FirewallPolicyPropertiesFormat_Status `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type FirewallPoliciesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion FirewallPoliciesSpecApiVersion `json:"apiVersion"`
	Comments   *string                        `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Identity: The identity of the firewall policy.
	Identity *ManagedServiceIdentity `json:"identity,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the firewall policy.
	Properties FirewallPolicyPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type FirewallPoliciesSpecType `json:"type"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type FirewallPoliciesSpecApiVersion string

const FirewallPoliciesSpecApiVersion20200501 = FirewallPoliciesSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/firewallPolicies"}
type FirewallPoliciesSpecType string

const FirewallPoliciesSpecTypeMicrosoftNetworkFirewallPolicies = FirewallPoliciesSpecType("Microsoft.Network/firewallPolicies")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyPropertiesFormat
type FirewallPolicyPropertiesFormat struct {

	//BasePolicy: The parent firewall policy from which rules are inherited.
	BasePolicy *SubResource `json:"basePolicy,omitempty"`

	//DnsSettings: DNS Proxy Settings definition.
	DnsSettings *DnsSettings `json:"dnsSettings,omitempty"`

	//IntrusionSystemMode: The operation mode for Intrusion system.
	IntrusionSystemMode *FirewallPolicyPropertiesFormatIntrusionSystemMode `json:"intrusionSystemMode,omitempty"`

	//ThreatIntelMode: The operation mode for Threat Intelligence.
	ThreatIntelMode *FirewallPolicyPropertiesFormatThreatIntelMode `json:"threatIntelMode,omitempty"`

	//ThreatIntelWhitelist: ThreatIntel Whitelist for Firewall Policy.
	ThreatIntelWhitelist *FirewallPolicyThreatIntelWhitelist `json:"threatIntelWhitelist,omitempty"`

	//TransportSecurity: TLS Configuration definition.
	TransportSecurity *FirewallPolicyTransportSecurity `json:"transportSecurity,omitempty"`
}

//Generated from:
type FirewallPolicyPropertiesFormat_Status struct {

	//BasePolicy: The parent firewall policy from which rules are inherited.
	BasePolicy *SubResource_Status `json:"basePolicy,omitempty"`

	//ChildPolicies: List of references to Child Firewall Policies.
	ChildPolicies []SubResource_Status `json:"childPolicies,omitempty"`

	//DnsSettings: DNS Proxy Settings definition.
	DnsSettings *DnsSettings_Status `json:"dnsSettings,omitempty"`

	//Firewalls: List of references to Azure Firewalls that this Firewall Policy is
	//associated with.
	Firewalls []SubResource_Status `json:"firewalls,omitempty"`

	//IntrusionSystemMode: The operation mode for Intrusion system.
	IntrusionSystemMode *FirewallPolicyIntrusionSystemMode_Status `json:"intrusionSystemMode,omitempty"`

	//ProvisioningState: The provisioning state of the firewall policy resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//RuleCollectionGroups: List of references to FirewallPolicyRuleCollectionGroups.
	RuleCollectionGroups []SubResource_Status `json:"ruleCollectionGroups,omitempty"`

	//ThreatIntelMode: The operation mode for Threat Intelligence.
	ThreatIntelMode *AzureFirewallThreatIntelMode_Status `json:"threatIntelMode,omitempty"`

	//ThreatIntelWhitelist: ThreatIntel Whitelist for Firewall Policy.
	ThreatIntelWhitelist *FirewallPolicyThreatIntelWhitelist_Status `json:"threatIntelWhitelist,omitempty"`

	//TransportSecurity: TLS Configuration definition.
	TransportSecurity *FirewallPolicyTransportSecurity_Status `json:"transportSecurity,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/DnsSettings
type DnsSettings struct {

	//EnableProxy: Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy *bool `json:"enableProxy,omitempty"`

	//RequireProxyForNetworkRules: FQDNs in Network Rules are supported when set to
	//true.
	RequireProxyForNetworkRules *bool `json:"requireProxyForNetworkRules,omitempty"`

	//Servers: List of Custom DNS Servers.
	Servers []string `json:"servers,omitempty"`
}

//Generated from:
type DnsSettings_Status struct {

	//EnableProxy: Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy *bool `json:"enableProxy,omitempty"`

	//RequireProxyForNetworkRules: FQDNs in Network Rules are supported when set to
	//true.
	RequireProxyForNetworkRules *bool `json:"requireProxyForNetworkRules,omitempty"`

	//Servers: List of Custom DNS Servers.
	Servers []string `json:"servers,omitempty"`
}

//Generated from:
// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type FirewallPolicyIntrusionSystemMode_Status string

const (
	FirewallPolicyIntrusionSystemMode_StatusDisabled = FirewallPolicyIntrusionSystemMode_Status("Disabled")
	FirewallPolicyIntrusionSystemMode_StatusEnabled  = FirewallPolicyIntrusionSystemMode_Status("Enabled")
)

// +kubebuilder:validation:Enum={"Disabled","Enabled"}
type FirewallPolicyPropertiesFormatIntrusionSystemMode string

const (
	FirewallPolicyPropertiesFormatIntrusionSystemModeDisabled = FirewallPolicyPropertiesFormatIntrusionSystemMode("Disabled")
	FirewallPolicyPropertiesFormatIntrusionSystemModeEnabled  = FirewallPolicyPropertiesFormatIntrusionSystemMode("Enabled")
)

// +kubebuilder:validation:Enum={"Alert","Deny","Off"}
type FirewallPolicyPropertiesFormatThreatIntelMode string

const (
	FirewallPolicyPropertiesFormatThreatIntelModeAlert = FirewallPolicyPropertiesFormatThreatIntelMode("Alert")
	FirewallPolicyPropertiesFormatThreatIntelModeDeny  = FirewallPolicyPropertiesFormatThreatIntelMode("Deny")
	FirewallPolicyPropertiesFormatThreatIntelModeOff   = FirewallPolicyPropertiesFormatThreatIntelMode("Off")
)

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyThreatIntelWhitelist
type FirewallPolicyThreatIntelWhitelist struct {

	//Fqdns: List of FQDNs for the ThreatIntel Whitelist.
	Fqdns []string `json:"fqdns,omitempty"`

	//IpAddresses: List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses []string `json:"ipAddresses,omitempty"`
}

//Generated from:
type FirewallPolicyThreatIntelWhitelist_Status struct {

	//Fqdns: List of FQDNs for the ThreatIntel Whitelist.
	Fqdns []string `json:"fqdns,omitempty"`

	//IpAddresses: List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses []string `json:"ipAddresses,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyTransportSecurity
type FirewallPolicyTransportSecurity struct {

	//CertificateAuthority: The CA used for intermediate CA generation.
	CertificateAuthority *FirewallPolicyCertificateAuthority `json:"certificateAuthority,omitempty"`

	//ExcludedDomains: List of domains which are excluded from TLS termination.
	ExcludedDomains []string `json:"excludedDomains,omitempty"`

	//TrustedRootCertificates: Certificates which are to be trusted by the firewall.
	TrustedRootCertificates []FirewallPolicyTrustedRootCertificate `json:"trustedRootCertificates,omitempty"`
}

//Generated from:
type FirewallPolicyTransportSecurity_Status struct {

	//CertificateAuthority: The CA used for intermediate CA generation.
	CertificateAuthority *FirewallPolicyCertificateAuthority_Status `json:"certificateAuthority,omitempty"`

	//ExcludedDomains: List of domains which are excluded from TLS termination.
	ExcludedDomains []string `json:"excludedDomains,omitempty"`

	//TrustedRootCertificates: Certificates which are to be trusted by the firewall.
	TrustedRootCertificates []FirewallPolicyTrustedRootCertificate_Status `json:"trustedRootCertificates,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyCertificateAuthority
type FirewallPolicyCertificateAuthority struct {

	//Name: Name of the CA certificate.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the certificate authority.
	Properties *FirewallPolicyCertificateAuthorityPropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type FirewallPolicyCertificateAuthority_Status struct {

	//Name: Name of the CA certificate.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the certificate authority.
	Properties *FirewallPolicyCertificateAuthorityPropertiesFormat_Status `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyTrustedRootCertificate
type FirewallPolicyTrustedRootCertificate struct {

	//Name: Name of the trusted root certificate that is unique within a firewall
	//policy.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the trusted root authorities.
	Properties *FirewallPolicyTrustedRootCertificatePropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type FirewallPolicyTrustedRootCertificate_Status struct {

	//Name: Name of the trusted root certificate that is unique within a firewall
	//policy.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the trusted root authorities.
	Properties *FirewallPolicyTrustedRootCertificatePropertiesFormat_Status `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyCertificateAuthorityPropertiesFormat
type FirewallPolicyCertificateAuthorityPropertiesFormat struct {

	//KeyVaultSecretId: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or
	//'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `json:"keyVaultSecretId,omitempty"`
}

//Generated from:
type FirewallPolicyCertificateAuthorityPropertiesFormat_Status struct {

	//KeyVaultSecretId: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or
	//'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `json:"keyVaultSecretId,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyTrustedRootCertificatePropertiesFormat
type FirewallPolicyTrustedRootCertificatePropertiesFormat struct {

	//KeyVaultSecretId: Secret Id of (base-64 encoded unencrypted pfx) the public
	//certificate data stored in KeyVault.
	KeyVaultSecretId *string `json:"keyVaultSecretId,omitempty"`
}

//Generated from:
type FirewallPolicyTrustedRootCertificatePropertiesFormat_Status struct {

	//KeyVaultSecretId: Secret Id of (base-64 encoded unencrypted pfx) the public
	//certificate data stored in KeyVault.
	KeyVaultSecretId *string `json:"keyVaultSecretId,omitempty"`
}

func init() {
	SchemeBuilder.Register(&FirewallPolicies{}, &FirewallPoliciesList{})
}
