// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type LocalNetworkGateways struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LocalNetworkGateways_Spec  `json:"spec,omitempty"`
	Status            LocalNetworkGateway_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LocalNetworkGatewaysList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LocalNetworkGateways `json:"items"`
}

type LocalNetworkGateway_Status struct {
	AtProvider LocalNetworkGatewaysObservation `json:"atProvider"`
}

type LocalNetworkGateways_Spec struct {
	ForProvider LocalNetworkGatewaysParameters `json:"forProvider"`
}

type LocalNetworkGatewaysObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the local network gateway.
	Properties LocalNetworkGatewayPropertiesFormat_Status `json:"properties"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type LocalNetworkGatewaysParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion LocalNetworkGatewaysSpecApiVersion `json:"apiVersion"`
	Comments   *string                            `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the local network gateway.
	Properties LocalNetworkGatewayPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type LocalNetworkGatewaysSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/LocalNetworkGatewayPropertiesFormat
type LocalNetworkGatewayPropertiesFormat struct {

	//BgpSettings: Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `json:"bgpSettings,omitempty"`

	//Fqdn: FQDN of local network gateway.
	Fqdn *string `json:"fqdn,omitempty"`

	//GatewayIpAddress: IP address of local network gateway.
	GatewayIpAddress *string `json:"gatewayIpAddress,omitempty"`

	//LocalNetworkAddressSpace: Local network site address space.
	LocalNetworkAddressSpace *AddressSpace `json:"localNetworkAddressSpace,omitempty"`
}

//Generated from:
type LocalNetworkGatewayPropertiesFormat_Status struct {

	//BgpSettings: Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings_Status `json:"bgpSettings,omitempty"`

	//Fqdn: FQDN of local network gateway.
	Fqdn *string `json:"fqdn,omitempty"`

	//GatewayIpAddress: IP address of local network gateway.
	GatewayIpAddress *string `json:"gatewayIpAddress,omitempty"`

	//LocalNetworkAddressSpace: Local network site address space.
	LocalNetworkAddressSpace *AddressSpace_Status `json:"localNetworkAddressSpace,omitempty"`

	//ProvisioningState: The provisioning state of the local network gateway resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//ResourceGuid: The resource GUID property of the local network gateway resource.
	ResourceGuid *string `json:"resourceGuid,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type LocalNetworkGatewaysSpecApiVersion string

const LocalNetworkGatewaysSpecApiVersion20200501 = LocalNetworkGatewaysSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/localNetworkGateways"}
type LocalNetworkGatewaysSpecType string

const LocalNetworkGatewaysSpecTypeMicrosoftNetworkLocalNetworkGateways = LocalNetworkGatewaysSpecType("Microsoft.Network/localNetworkGateways")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/AddressSpace
type AddressSpace struct {

	// +kubebuilder:validation:Required
	//AddressPrefixes: A list of address blocks reserved for this virtual network in
	//CIDR notation.
	AddressPrefixes []string `json:"addressPrefixes"`
}

//Generated from:
type AddressSpace_Status struct {

	//AddressPrefixes: A list of address blocks reserved for this virtual network in
	//CIDR notation.
	AddressPrefixes []string `json:"addressPrefixes,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/BgpSettings
type BgpSettings struct {

	//Asn: The BGP speaker's ASN.
	Asn *int `json:"asn,omitempty"`

	//BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP
	//speaker.
	BgpPeeringAddress *string `json:"bgpPeeringAddress,omitempty"`

	//BgpPeeringAddresses: BGP peering address with IP configuration ID for virtual
	//network gateway.
	BgpPeeringAddresses []IPConfigurationBgpPeeringAddress `json:"bgpPeeringAddresses,omitempty"`

	//PeerWeight: The weight added to routes learned from this BGP speaker.
	PeerWeight *int `json:"peerWeight,omitempty"`
}

//Generated from:
type BgpSettings_Status struct {

	//Asn: The BGP speaker's ASN.
	Asn *int `json:"asn,omitempty"`

	//BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP
	//speaker.
	BgpPeeringAddress *string `json:"bgpPeeringAddress,omitempty"`

	//BgpPeeringAddresses: BGP peering address with IP configuration ID for virtual
	//network gateway.
	BgpPeeringAddresses []IPConfigurationBgpPeeringAddress_Status `json:"bgpPeeringAddresses,omitempty"`

	//PeerWeight: The weight added to routes learned from this BGP speaker.
	PeerWeight *int `json:"peerWeight,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/IPConfigurationBgpPeeringAddress
type IPConfigurationBgpPeeringAddress struct {

	//CustomBgpIpAddresses: The list of custom BGP peering addresses which belong to
	//IP configuration.
	CustomBgpIpAddresses []string `json:"customBgpIpAddresses,omitempty"`

	//IpconfigurationId: The ID of IP configuration which belongs to gateway.
	IpconfigurationId *string `json:"ipconfigurationId,omitempty"`
}

//Generated from:
type IPConfigurationBgpPeeringAddress_Status struct {

	//CustomBgpIpAddresses: The list of custom BGP peering addresses which belong to
	//IP configuration.
	CustomBgpIpAddresses []string `json:"customBgpIpAddresses,omitempty"`

	//DefaultBgpIpAddresses: The list of default BGP peering addresses which belong to
	//IP configuration.
	DefaultBgpIpAddresses []string `json:"defaultBgpIpAddresses,omitempty"`

	//IpconfigurationId: The ID of IP configuration which belongs to gateway.
	IpconfigurationId *string `json:"ipconfigurationId,omitempty"`

	//TunnelIpAddresses: The list of tunnel public IP addresses which belong to IP
	//configuration.
	TunnelIpAddresses []string `json:"tunnelIpAddresses,omitempty"`
}

func init() {
	SchemeBuilder.Register(&LocalNetworkGateways{}, &LocalNetworkGatewaysList{})
}
