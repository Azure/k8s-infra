// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type ApplicationSecurityGroups struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApplicationSecurityGroups_Spec  `json:"spec,omitempty"`
	Status            ApplicationSecurityGroup_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type ApplicationSecurityGroupsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApplicationSecurityGroups `json:"items"`
}

type ApplicationSecurityGroup_Status struct {
	AtProvider ApplicationSecurityGroupsObservation `json:"atProvider"`
}

type ApplicationSecurityGroups_Spec struct {
	ForProvider ApplicationSecurityGroupsParameters `json:"forProvider"`
}

type ApplicationSecurityGroupsObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the application security group.
	Properties *ApplicationSecurityGroupPropertiesFormat_Status `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type ApplicationSecurityGroupsParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion ApplicationSecurityGroupsSpecApiVersion `json:"apiVersion"`
	Comments   *string                                 `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the application security group.
	Properties interface{} `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type ApplicationSecurityGroupsSpecType `json:"type"`
}

//Generated from:
type ApplicationSecurityGroupPropertiesFormat_Status struct {

	//ProvisioningState: The provisioning state of the application security group
	//resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//ResourceGuid: The resource GUID property of the application security group
	//resource. It uniquely identifies a resource, even if the user changes its name
	//or migrate the resource across subscriptions or resource groups.
	ResourceGuid *string `json:"resourceGuid,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type ApplicationSecurityGroupsSpecApiVersion string

const ApplicationSecurityGroupsSpecApiVersion20200501 = ApplicationSecurityGroupsSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/applicationSecurityGroups"}
type ApplicationSecurityGroupsSpecType string

const ApplicationSecurityGroupsSpecTypeMicrosoftNetworkApplicationSecurityGroups = ApplicationSecurityGroupsSpecType("Microsoft.Network/applicationSecurityGroups")

func init() {
	SchemeBuilder.Register(&ApplicationSecurityGroups{}, &ApplicationSecurityGroupsList{})
}
