// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type VirtualNetworksSubnets struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VirtualNetworksSubnets_Spec `json:"spec,omitempty"`
	Status            Subnet_Status               `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type VirtualNetworksSubnetsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualNetworksSubnets `json:"items"`
}

type Subnet_Status struct {
	AtProvider VirtualNetworksSubnetsObservation `json:"atProvider"`
}

type VirtualNetworksSubnets_Spec struct {
	ForProvider VirtualNetworksSubnetsParameters `json:"forProvider"`
}

type VirtualNetworksSubnetsObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the subnet.
	Properties *SubnetPropertiesFormat_Status `json:"properties,omitempty"`
}

type VirtualNetworksSubnetsParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion VirtualNetworksSubnetsSpecApiVersion `json:"apiVersion"`
	Comments   *string                              `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location *v20150101.ResourceLocations `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the subnet.
	Properties SubnetPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type VirtualNetworksSubnetsSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/SubnetPropertiesFormat
type SubnetPropertiesFormat struct {

	// +kubebuilder:validation:Required
	//AddressPrefix: The address prefix for the subnet.
	AddressPrefix string `json:"addressPrefix"`

	//AddressPrefixes: List of address prefixes for the subnet.
	AddressPrefixes []string `json:"addressPrefixes,omitempty"`

	//Delegations: An array of references to the delegations on the subnet.
	Delegations []Delegation `json:"delegations,omitempty"`

	//IpAllocations: Array of IpAllocation which reference this subnet.
	IpAllocations []SubResource `json:"ipAllocations,omitempty"`

	//NatGateway: Nat gateway associated with this subnet.
	NatGateway *SubResource `json:"natGateway,omitempty"`

	//NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *SubResource `json:"networkSecurityGroup,omitempty"`

	//PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on
	//private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `json:"privateEndpointNetworkPolicies,omitempty"`

	//PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on
	//private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `json:"privateLinkServiceNetworkPolicies,omitempty"`

	//RouteTable: The reference to the RouteTable resource.
	RouteTable *SubResource `json:"routeTable,omitempty"`

	//ServiceEndpointPolicies: An array of service endpoint policies.
	ServiceEndpointPolicies []SubResource `json:"serviceEndpointPolicies,omitempty"`

	//ServiceEndpoints: An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `json:"serviceEndpoints,omitempty"`
}

//Generated from:
type SubnetPropertiesFormat_Status struct {

	//AddressPrefix: The address prefix for the subnet.
	AddressPrefix *string `json:"addressPrefix,omitempty"`

	//AddressPrefixes: List of address prefixes for the subnet.
	AddressPrefixes []string `json:"addressPrefixes,omitempty"`

	//Delegations: An array of references to the delegations on the subnet.
	Delegations []Delegation_Status `json:"delegations,omitempty"`

	//IpAllocations: Array of IpAllocation which reference this subnet.
	IpAllocations []SubResource_Status `json:"ipAllocations,omitempty"`

	//IpConfigurationProfiles: Array of IP configuration profiles which reference this
	//subnet.
	IpConfigurationProfiles []IPConfigurationProfile_Status `json:"ipConfigurationProfiles,omitempty"`

	//IpConfigurations: An array of references to the network interface IP
	//configurations using subnet.
	IpConfigurations []IPConfiguration_Status `json:"ipConfigurations,omitempty"`

	//NatGateway: Nat gateway associated with this subnet.
	NatGateway *SubResource_Status `json:"natGateway,omitempty"`

	//NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroup_Status `json:"networkSecurityGroup,omitempty"`

	//PrivateEndpointNetworkPolicies: Enable or Disable apply network policies on
	//private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `json:"privateEndpointNetworkPolicies,omitempty"`

	//PrivateEndpoints: An array of references to private endpoints.
	PrivateEndpoints []PrivateEndpoint_Status `json:"privateEndpoints,omitempty"`

	//PrivateLinkServiceNetworkPolicies: Enable or Disable apply network policies on
	//private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `json:"privateLinkServiceNetworkPolicies,omitempty"`

	//ProvisioningState: The provisioning state of the subnet resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//Purpose: A read-only string identifying the intention of use for this subnet
	//based on delegations and other user-defined properties.
	Purpose *string `json:"purpose,omitempty"`

	//ResourceNavigationLinks: An array of references to the external resources using
	//subnet.
	ResourceNavigationLinks []ResourceNavigationLink_Status `json:"resourceNavigationLinks,omitempty"`

	//RouteTable: The reference to the RouteTable resource.
	RouteTable *RouteTable_Status `json:"routeTable,omitempty"`

	//ServiceAssociationLinks: An array of references to services injecting into this
	//subnet.
	ServiceAssociationLinks []ServiceAssociationLink_Status `json:"serviceAssociationLinks,omitempty"`

	//ServiceEndpointPolicies: An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicy_Status `json:"serviceEndpointPolicies,omitempty"`

	//ServiceEndpoints: An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat_Status `json:"serviceEndpoints,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type VirtualNetworksSubnetsSpecApiVersion string

const VirtualNetworksSubnetsSpecApiVersion20200501 = VirtualNetworksSubnetsSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/virtualNetworks/subnets"}
type VirtualNetworksSubnetsSpecType string

const VirtualNetworksSubnetsSpecTypeMicrosoftNetworkVirtualNetworksSubnets = VirtualNetworksSubnetsSpecType("Microsoft.Network/virtualNetworks/subnets")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/Delegation
type Delegation struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within a subnet. This name can be
	//used to access the resource.
	Name string `json:"name"`

	//Properties: Properties of the subnet.
	Properties *ServiceDelegationPropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type Delegation_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a subnet. This name can be
	//used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the subnet.
	Properties *ServiceDelegationPropertiesFormat_Status `json:"properties,omitempty"`
}

//Generated from:
type IPConfigurationProfile_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the IP configuration profile.
	Properties *IPConfigurationProfilePropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Sub Resource type.
	Type *string `json:"type,omitempty"`
}

//Generated from:
type ResourceNavigationLink_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: Name of the resource that is unique within a resource group. This name can
	//be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Resource navigation link properties format.
	Properties *ResourceNavigationLinkFormat_Status `json:"properties,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

//Generated from:
type ServiceAssociationLink_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: Name of the resource that is unique within a resource group. This name can
	//be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Resource navigation link properties format.
	Properties *ServiceAssociationLinkPropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/ServiceEndpointPropertiesFormat
type ServiceEndpointPropertiesFormat struct {

	//Locations: A list of locations.
	Locations []string `json:"locations,omitempty"`

	//Service: The type of the endpoint service.
	Service *string `json:"service,omitempty"`
}

//Generated from:
type ServiceEndpointPropertiesFormat_Status struct {

	//Locations: A list of locations.
	Locations []string `json:"locations,omitempty"`

	//ProvisioningState: The provisioning state of the service endpoint resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//Service: The type of the endpoint service.
	Service *string `json:"service,omitempty"`
}

//Generated from:
type IPConfigurationProfilePropertiesFormat_Status struct {

	//ProvisioningState: The provisioning state of the IP configuration profile
	//resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//Subnet: The reference to the subnet resource to create a container network
	//interface ip configuration.
	Subnet *Subnet_Status `json:"subnet,omitempty"`
}

//Generated from:
type ResourceNavigationLinkFormat_Status struct {

	//Link: Link to the external resource.
	Link *string `json:"link,omitempty"`

	//LinkedResourceType: Resource type of the linked resource.
	LinkedResourceType *string `json:"linkedResourceType,omitempty"`

	//ProvisioningState: The provisioning state of the resource navigation link
	//resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

//Generated from:
type ServiceAssociationLinkPropertiesFormat_Status struct {

	//AllowDelete: If true, the resource can be deleted.
	AllowDelete *bool `json:"allowDelete,omitempty"`

	//Link: Link to the external resource.
	Link *string `json:"link,omitempty"`

	//LinkedResourceType: Resource type of the linked resource.
	LinkedResourceType *string `json:"linkedResourceType,omitempty"`

	//Locations: A list of locations.
	Locations []string `json:"locations,omitempty"`

	//ProvisioningState: The provisioning state of the service association link
	//resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/ServiceDelegationPropertiesFormat
type ServiceDelegationPropertiesFormat struct {

	//ServiceName: The name of the service to whom the subnet should be delegated
	//(e.g. Microsoft.Sql/servers).
	ServiceName *string `json:"serviceName,omitempty"`
}

//Generated from:
type ServiceDelegationPropertiesFormat_Status struct {

	//Actions: The actions permitted to the service upon delegation.
	Actions []string `json:"actions,omitempty"`

	//ProvisioningState: The provisioning state of the service delegation resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//ServiceName: The name of the service to whom the subnet should be delegated
	//(e.g. Microsoft.Sql/servers).
	ServiceName *string `json:"serviceName,omitempty"`
}

func init() {
	SchemeBuilder.Register(&VirtualNetworksSubnets{}, &VirtualNetworksSubnetsList{})
}
