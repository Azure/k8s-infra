// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type VirtualHubsHubRouteTables struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VirtualHubsHubRouteTables_Spec `json:"spec,omitempty"`
	Status            HubRouteTable_Status           `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type VirtualHubsHubRouteTablesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualHubsHubRouteTables `json:"items"`
}

type HubRouteTable_Status struct {
	AtProvider VirtualHubsHubRouteTablesObservation `json:"atProvider"`
}

type VirtualHubsHubRouteTables_Spec struct {
	ForProvider VirtualHubsHubRouteTablesParameters `json:"forProvider"`
}

type VirtualHubsHubRouteTablesObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the RouteTable resource.
	Properties *HubRouteTableProperties_Status `json:"properties,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type VirtualHubsHubRouteTablesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion VirtualHubsHubRouteTablesSpecApiVersion `json:"apiVersion"`
	Comments   *string                                 `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location *v20150101.ResourceLocations `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the RouteTable resource.
	Properties HubRouteTableProperties `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type VirtualHubsHubRouteTablesSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/HubRouteTableProperties
type HubRouteTableProperties struct {

	//Labels: List of labels associated with this route table.
	Labels []string `json:"labels,omitempty"`

	//Routes: List of all routes.
	Routes []HubRoute `json:"routes,omitempty"`
}

//Generated from:
type HubRouteTableProperties_Status struct {

	//AssociatedConnections: List of all connections associated with this route table.
	AssociatedConnections []SubResource_Status `json:"associatedConnections,omitempty"`

	//Labels: List of labels associated with this route table.
	Labels []string `json:"labels,omitempty"`

	//PropagatingConnections: List of all connections that advertise to this route
	//table.
	PropagatingConnections []SubResource_Status `json:"propagatingConnections,omitempty"`

	//ProvisioningState: The provisioning state of the RouteTable resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//Routes: List of all routes.
	Routes []HubRoute_Status `json:"routes,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type VirtualHubsHubRouteTablesSpecApiVersion string

const VirtualHubsHubRouteTablesSpecApiVersion20200501 = VirtualHubsHubRouteTablesSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/virtualHubs/hubRouteTables"}
type VirtualHubsHubRouteTablesSpecType string

const VirtualHubsHubRouteTablesSpecTypeMicrosoftNetworkVirtualHubsHubRouteTables = VirtualHubsHubRouteTablesSpecType("Microsoft.Network/virtualHubs/hubRouteTables")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/HubRoute
type HubRoute struct {

	// +kubebuilder:validation:Required
	//DestinationType: The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType string `json:"destinationType"`

	// +kubebuilder:validation:Required
	//Destinations: List of all destinations.
	Destinations []string `json:"destinations"`

	// +kubebuilder:validation:Required
	//Name: The name of the Route that is unique within a RouteTable. This name can be
	//used to access this route.
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//NextHop: NextHop resource ID.
	NextHop string `json:"nextHop"`

	// +kubebuilder:validation:Required
	//NextHopType: The type of next hop (eg: ResourceId).
	NextHopType string `json:"nextHopType"`
}

//Generated from:
type HubRoute_Status struct {

	// +kubebuilder:validation:Required
	//DestinationType: The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType string `json:"destinationType"`

	// +kubebuilder:validation:Required
	//Destinations: List of all destinations.
	Destinations []string `json:"destinations"`

	// +kubebuilder:validation:Required
	//Name: The name of the Route that is unique within a RouteTable. This name can be
	//used to access this route.
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//NextHop: NextHop resource ID.
	NextHop string `json:"nextHop"`

	// +kubebuilder:validation:Required
	//NextHopType: The type of next hop (eg: ResourceId).
	NextHopType string `json:"nextHopType"`
}

func init() {
	SchemeBuilder.Register(&VirtualHubsHubRouteTables{}, &VirtualHubsHubRouteTablesList{})
}
