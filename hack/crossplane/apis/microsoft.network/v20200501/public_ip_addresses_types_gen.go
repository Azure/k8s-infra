// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type PublicIPAddresses struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PublicIPAddresses_Spec `json:"spec,omitempty"`
	Status            PublicIPAddress_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type PublicIPAddressesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PublicIPAddresses `json:"items"`
}

//Generated from:
type PublicIPAddress_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Public IP address properties.
	Properties *PublicIPAddressPropertiesFormat_Status `json:"properties,omitempty"`

	//Sku: The public IP address SKU.
	Sku *PublicIPAddressSku_Status `json:"sku,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`

	//Zones: A list of availability zones denoting the IP allocated for the resource
	//needs to come from.
	Zones []string `json:"zones,omitempty"`
}

type PublicIPAddresses_Spec struct {
	ForProvider PublicIPAddressesParameters `json:"forProvider"`
}

//Generated from:
type PublicIPAddressPropertiesFormat_Status struct {

	//DdosSettings: The DDoS protection custom policy associated with the public IP
	//address.
	DdosSettings *DdosSettings_Status `json:"ddosSettings,omitempty"`

	//DnsSettings: The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings_Status `json:"dnsSettings,omitempty"`

	//IdleTimeoutInMinutes: The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	//IpAddress: The IP address associated with the public IP address resource.
	IpAddress *string `json:"ipAddress,omitempty"`

	//IpConfiguration: The IP configuration associated with the public IP address.
	IpConfiguration *IPConfiguration_Status `json:"ipConfiguration,omitempty"`

	//IpTags: The list of tags associated with the public IP address.
	IpTags []IpTag_Status `json:"ipTags,omitempty"`

	//ProvisioningState: The provisioning state of the public IP address resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//PublicIPAddressVersion: The public IP address version.
	PublicIPAddressVersion *IPVersion_Status `json:"publicIPAddressVersion,omitempty"`

	//PublicIPAllocationMethod: The public IP address allocation method.
	PublicIPAllocationMethod *IPAllocationMethod_Status `json:"publicIPAllocationMethod,omitempty"`

	//PublicIPPrefix: The Public IP Prefix this Public IP Address should be allocated
	//from.
	PublicIPPrefix *SubResource_Status `json:"publicIPPrefix,omitempty"`

	//ResourceGuid: The resource GUID property of the public IP address resource.
	ResourceGuid *string `json:"resourceGuid,omitempty"`
}

//Generated from:
type PublicIPAddressSku_Status struct {

	//Name: Name of a public IP address SKU.
	Name *PublicIPAddressSkuStatusName `json:"name,omitempty"`
}

type PublicIPAddressesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion PublicIPAddressesSpecApiVersion `json:"apiVersion"`
	Comments   *string                         `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Public IP address properties.
	Properties PublicIPAddressPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Sku: The public IP address SKU.
	Sku *PublicIPAddressSku `json:"sku,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type PublicIPAddressesSpecType `json:"type"`

	//Zones: A list of availability zones denoting the IP allocated for the resource
	//needs to come from.
	Zones []string `json:"zones,omitempty"`
}

//Generated from:
type DdosSettings_Status struct {

	//DdosCustomPolicy: The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResource_Status `json:"ddosCustomPolicy,omitempty"`

	//ProtectedIP: Enables DDoS protection on the public IP.
	ProtectedIP *bool `json:"protectedIP,omitempty"`

	//ProtectionCoverage: The DDoS protection policy customizability of the public IP.
	//Only standard coverage will have the ability to be customized.
	ProtectionCoverage *DdosSettingsStatusProtectionCoverage `json:"protectionCoverage,omitempty"`
}

//Generated from:
// +kubebuilder:validation:Enum={"Dynamic","Static"}
type IPAllocationMethod_Status string

const (
	IPAllocationMethod_StatusDynamic = IPAllocationMethod_Status("Dynamic")
	IPAllocationMethod_StatusStatic  = IPAllocationMethod_Status("Static")
)

//Generated from:
type IPConfiguration_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the IP configuration.
	Properties *IPConfigurationPropertiesFormat_Status `json:"properties,omitempty"`
}

//Generated from:
type IpTag_Status struct {

	//IpTagType: The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `json:"ipTagType,omitempty"`

	//Tag: The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `json:"tag,omitempty"`
}

//Generated from:
type PublicIPAddressDnsSettings_Status struct {

	//DomainNameLabel: The domain name label. The concatenation of the domain name
	//label and the regionalized DNS zone make up the fully qualified domain name
	//associated with the public IP address. If a domain name label is specified, an A
	//DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `json:"domainNameLabel,omitempty"`

	//Fqdn: The Fully Qualified Domain Name of the A DNS record associated with the
	//public IP. This is the concatenation of the domainNameLabel and the regionalized
	//DNS zone.
	Fqdn *string `json:"fqdn,omitempty"`

	//ReverseFqdn: The reverse FQDN. A user-visible, fully qualified domain name that
	//resolves to this public IP address. If the reverseFqdn is specified, then a PTR
	//DNS record is created pointing from the IP address in the in-addr.arpa domain to
	//the reverse FQDN.
	ReverseFqdn *string `json:"reverseFqdn,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PublicIPAddressPropertiesFormat
type PublicIPAddressPropertiesFormat struct {

	//DdosSettings: The DDoS protection custom policy associated with the public IP
	//address.
	DdosSettings *DdosSettings `json:"ddosSettings,omitempty"`

	//DnsSettings: The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings `json:"dnsSettings,omitempty"`

	//IdleTimeoutInMinutes: The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	//IpAddress: The IP address associated with the public IP address resource.
	IpAddress *string `json:"ipAddress,omitempty"`

	//IpTags: The list of tags associated with the public IP address.
	IpTags []IpTag `json:"ipTags,omitempty"`

	//PublicIPAddressVersion: The public IP address version.
	PublicIPAddressVersion *PublicIPAddressPropertiesFormatPublicIPAddressVersion `json:"publicIPAddressVersion,omitempty"`

	// +kubebuilder:validation:Required
	//PublicIPAllocationMethod: The public IP address allocation method.
	PublicIPAllocationMethod PublicIPAddressPropertiesFormatPublicIPAllocationMethod `json:"publicIPAllocationMethod"`

	//PublicIPPrefix: The Public IP Prefix this Public IP Address should be allocated
	//from.
	PublicIPPrefix *SubResource `json:"publicIPPrefix,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PublicIPAddressSku
type PublicIPAddressSku struct {

	//Name: Name of a public IP address SKU.
	Name *PublicIPAddressSkuName `json:"name,omitempty"`
}

// +kubebuilder:validation:Enum={"Basic","Standard"}
type PublicIPAddressSkuStatusName string

const (
	PublicIPAddressSkuStatusNameBasic    = PublicIPAddressSkuStatusName("Basic")
	PublicIPAddressSkuStatusNameStandard = PublicIPAddressSkuStatusName("Standard")
)

// +kubebuilder:validation:Enum={"2020-05-01"}
type PublicIPAddressesSpecApiVersion string

const PublicIPAddressesSpecApiVersion20200501 = PublicIPAddressesSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/publicIPAddresses"}
type PublicIPAddressesSpecType string

const PublicIPAddressesSpecTypeMicrosoftNetworkPublicIPAddresses = PublicIPAddressesSpecType("Microsoft.Network/publicIPAddresses")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/DdosSettings
type DdosSettings struct {

	//DdosCustomPolicy: The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResource `json:"ddosCustomPolicy,omitempty"`

	//ProtectedIP: Enables DDoS protection on the public IP.
	ProtectedIP *bool `json:"protectedIP,omitempty"`

	//ProtectionCoverage: The DDoS protection policy customizability of the public IP.
	//Only standard coverage will have the ability to be customized.
	ProtectionCoverage *DdosSettingsProtectionCoverage `json:"protectionCoverage,omitempty"`
}

// +kubebuilder:validation:Enum={"Basic","Standard"}
type DdosSettingsStatusProtectionCoverage string

const (
	DdosSettingsStatusProtectionCoverageBasic    = DdosSettingsStatusProtectionCoverage("Basic")
	DdosSettingsStatusProtectionCoverageStandard = DdosSettingsStatusProtectionCoverage("Standard")
)

//Generated from:
type IPConfigurationPropertiesFormat_Status struct {

	//PrivateIPAddress: The private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAllocationMethod: The private IP address allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod_Status `json:"privateIPAllocationMethod,omitempty"`

	//ProvisioningState: The provisioning state of the IP configuration resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//PublicIPAddress: The reference to the public IP resource.
	PublicIPAddress *PublicIPAddress_Status `json:"publicIPAddress,omitempty"`

	//Subnet: The reference to the subnet resource.
	Subnet *Subnet_Status `json:"subnet,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/IpTag
type IpTag struct {

	//IpTagType: The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `json:"ipTagType,omitempty"`

	//Tag: The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `json:"tag,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/PublicIPAddressDnsSettings
type PublicIPAddressDnsSettings struct {

	// +kubebuilder:validation:Required
	//DomainNameLabel: The domain name label. The concatenation of the domain name
	//label and the regionalized DNS zone make up the fully qualified domain name
	//associated with the public IP address. If a domain name label is specified, an A
	//DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel string `json:"domainNameLabel"`

	//Fqdn: The Fully Qualified Domain Name of the A DNS record associated with the
	//public IP. This is the concatenation of the domainNameLabel and the regionalized
	//DNS zone.
	Fqdn *string `json:"fqdn,omitempty"`

	//ReverseFqdn: The reverse FQDN. A user-visible, fully qualified domain name that
	//resolves to this public IP address. If the reverseFqdn is specified, then a PTR
	//DNS record is created pointing from the IP address in the in-addr.arpa domain to
	//the reverse FQDN.
	ReverseFqdn *string `json:"reverseFqdn,omitempty"`
}

// +kubebuilder:validation:Enum={"IPv4","IPv6"}
type PublicIPAddressPropertiesFormatPublicIPAddressVersion string

const (
	PublicIPAddressPropertiesFormatPublicIPAddressVersionIPv4 = PublicIPAddressPropertiesFormatPublicIPAddressVersion("IPv4")
	PublicIPAddressPropertiesFormatPublicIPAddressVersionIPv6 = PublicIPAddressPropertiesFormatPublicIPAddressVersion("IPv6")
)

// +kubebuilder:validation:Enum={"Dynamic","Static"}
type PublicIPAddressPropertiesFormatPublicIPAllocationMethod string

const (
	PublicIPAddressPropertiesFormatPublicIPAllocationMethodDynamic = PublicIPAddressPropertiesFormatPublicIPAllocationMethod("Dynamic")
	PublicIPAddressPropertiesFormatPublicIPAllocationMethodStatic  = PublicIPAddressPropertiesFormatPublicIPAllocationMethod("Static")
)

// +kubebuilder:validation:Enum={"Basic","Standard"}
type PublicIPAddressSkuName string

const (
	PublicIPAddressSkuNameBasic    = PublicIPAddressSkuName("Basic")
	PublicIPAddressSkuNameStandard = PublicIPAddressSkuName("Standard")
)

// +kubebuilder:validation:Enum={"Basic","Standard"}
type DdosSettingsProtectionCoverage string

const (
	DdosSettingsProtectionCoverageBasic    = DdosSettingsProtectionCoverage("Basic")
	DdosSettingsProtectionCoverageStandard = DdosSettingsProtectionCoverage("Standard")
)

func init() {
	SchemeBuilder.Register(&PublicIPAddresses{}, &PublicIPAddressesList{})
}
