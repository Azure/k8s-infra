// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type VpnSites struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VpnSites_Spec  `json:"spec,omitempty"`
	Status            VpnSite_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type VpnSitesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VpnSites `json:"items"`
}

type VpnSite_Status struct {
	v1alpha1.ResourceStatus `json:",inline"`
	AtProvider              VpnSitesObservation `json:"atProvider"`
}

type VpnSites_Spec struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           VpnSitesParameters `json:"forProvider"`
}

type VpnSitesObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the VPN site.
	Properties *VpnSiteProperties_Status `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type VpnSitesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion VpnSitesSpecApiVersion `json:"apiVersion"`
	Comments   *string                `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the VPN site.
	Properties VpnSiteProperties `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type VpnSitesSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/VpnSiteProperties
type VpnSiteProperties struct {

	//AddressSpace: The AddressSpace that contains an array of IP address ranges.
	AddressSpace *AddressSpace `json:"addressSpace,omitempty"`

	//BgpProperties: The set of bgp properties.
	BgpProperties *BgpSettings `json:"bgpProperties,omitempty"`

	//DeviceProperties: The device properties.
	DeviceProperties *DeviceProperties `json:"deviceProperties,omitempty"`

	//IpAddress: The ip-address for the vpn-site.
	IpAddress *string `json:"ipAddress,omitempty"`

	//IsSecuritySite: IsSecuritySite flag.
	IsSecuritySite *bool `json:"isSecuritySite,omitempty"`

	//SiteKey: The key for vpn-site that can be used for connections.
	SiteKey *string `json:"siteKey,omitempty"`

	//VirtualWan: The VirtualWAN to which the vpnSite belongs.
	VirtualWan *SubResource `json:"virtualWan,omitempty"`

	//VpnSiteLinks: List of all vpn site links.
	VpnSiteLinks []VpnSiteLink `json:"vpnSiteLinks,omitempty"`
}

//Generated from:
type VpnSiteProperties_Status struct {

	//AddressSpace: The AddressSpace that contains an array of IP address ranges.
	AddressSpace *AddressSpace_Status `json:"addressSpace,omitempty"`

	//BgpProperties: The set of bgp properties.
	BgpProperties *BgpSettings_Status `json:"bgpProperties,omitempty"`

	//DeviceProperties: The device properties.
	DeviceProperties *DeviceProperties_Status `json:"deviceProperties,omitempty"`

	//IpAddress: The ip-address for the vpn-site.
	IpAddress *string `json:"ipAddress,omitempty"`

	//IsSecuritySite: IsSecuritySite flag.
	IsSecuritySite *bool `json:"isSecuritySite,omitempty"`

	//ProvisioningState: The provisioning state of the VPN site resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//SiteKey: The key for vpn-site that can be used for connections.
	SiteKey *string `json:"siteKey,omitempty"`

	//VirtualWan: The VirtualWAN to which the vpnSite belongs.
	VirtualWan *SubResource_Status `json:"virtualWan,omitempty"`

	//VpnSiteLinks: List of all vpn site links.
	VpnSiteLinks []VpnSiteLink_Status `json:"vpnSiteLinks,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type VpnSitesSpecApiVersion string

const VpnSitesSpecApiVersion20200501 = VpnSitesSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/vpnSites"}
type VpnSitesSpecType string

const VpnSitesSpecTypeMicrosoftNetworkVpnSites = VpnSitesSpecType("Microsoft.Network/vpnSites")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/DeviceProperties
type DeviceProperties struct {

	//DeviceModel: Model of the device.
	DeviceModel *string `json:"deviceModel,omitempty"`

	//DeviceVendor: Name of the device Vendor.
	DeviceVendor *string `json:"deviceVendor,omitempty"`

	//LinkSpeedInMbps: Link speed.
	LinkSpeedInMbps *int `json:"linkSpeedInMbps,omitempty"`
}

//Generated from:
type DeviceProperties_Status struct {

	//DeviceModel: Model of the device.
	DeviceModel *string `json:"deviceModel,omitempty"`

	//DeviceVendor: Name of the device Vendor.
	DeviceVendor *string `json:"deviceVendor,omitempty"`

	//LinkSpeedInMbps: Link speed.
	LinkSpeedInMbps *int `json:"linkSpeedInMbps,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/VpnSiteLink
type VpnSiteLink struct {

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the VPN site link.
	Properties *VpnSiteLinkProperties `json:"properties,omitempty"`
}

//Generated from:
type VpnSiteLink_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the VPN site link.
	Properties *VpnSiteLinkProperties_Status `json:"properties,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/VpnSiteLinkProperties
type VpnSiteLinkProperties struct {

	//BgpProperties: The set of bgp properties.
	BgpProperties *VpnLinkBgpSettings `json:"bgpProperties,omitempty"`

	//Fqdn: FQDN of vpn-site-link.
	Fqdn *string `json:"fqdn,omitempty"`

	//IpAddress: The ip-address for the vpn-site-link.
	IpAddress *string `json:"ipAddress,omitempty"`

	//LinkProperties: The link provider properties.
	LinkProperties *VpnLinkProviderProperties `json:"linkProperties,omitempty"`
}

//Generated from:
type VpnSiteLinkProperties_Status struct {

	//BgpProperties: The set of bgp properties.
	BgpProperties *VpnLinkBgpSettings_Status `json:"bgpProperties,omitempty"`

	//Fqdn: FQDN of vpn-site-link.
	Fqdn *string `json:"fqdn,omitempty"`

	//IpAddress: The ip-address for the vpn-site-link.
	IpAddress *string `json:"ipAddress,omitempty"`

	//LinkProperties: The link provider properties.
	LinkProperties *VpnLinkProviderProperties_Status `json:"linkProperties,omitempty"`

	//ProvisioningState: The provisioning state of the VPN site link resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/VpnLinkBgpSettings
type VpnLinkBgpSettings struct {

	//Asn: The BGP speaker's ASN.
	Asn *int `json:"asn,omitempty"`

	//BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP
	//speaker.
	BgpPeeringAddress *string `json:"bgpPeeringAddress,omitempty"`
}

//Generated from:
type VpnLinkBgpSettings_Status struct {

	//Asn: The BGP speaker's ASN.
	Asn *int `json:"asn,omitempty"`

	//BgpPeeringAddress: The BGP peering address and BGP identifier of this BGP
	//speaker.
	BgpPeeringAddress *string `json:"bgpPeeringAddress,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/VpnLinkProviderProperties
type VpnLinkProviderProperties struct {

	//LinkProviderName: Name of the link provider.
	LinkProviderName *string `json:"linkProviderName,omitempty"`

	//LinkSpeedInMbps: Link speed.
	LinkSpeedInMbps *int `json:"linkSpeedInMbps,omitempty"`
}

//Generated from:
type VpnLinkProviderProperties_Status struct {

	//LinkProviderName: Name of the link provider.
	LinkProviderName *string `json:"linkProviderName,omitempty"`

	//LinkSpeedInMbps: Link speed.
	LinkSpeedInMbps *int `json:"linkSpeedInMbps,omitempty"`
}

func init() {
	SchemeBuilder.Register(&VpnSites{}, &VpnSitesList{})
}
