// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type NatGateways struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NatGateways_Spec  `json:"spec,omitempty"`
	Status            NatGateway_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type NatGatewaysList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NatGateways `json:"items"`
}

type NatGateway_Status struct {
	AtProvider NatGatewaysObservation `json:"atProvider"`
}

type NatGateways_Spec struct {
	ForProvider NatGatewaysParameters `json:"forProvider"`
}

type NatGatewaysObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Nat Gateway properties.
	Properties *NatGatewayPropertiesFormat_Status `json:"properties,omitempty"`

	//Sku: The nat gateway SKU.
	Sku *NatGatewaySku_Status `json:"sku,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`

	//Zones: A list of availability zones denoting the zone in which Nat Gateway
	//should be deployed.
	Zones []string `json:"zones,omitempty"`
}

type NatGatewaysParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion NatGatewaysSpecApiVersion `json:"apiVersion"`
	Comments   *string                   `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Nat Gateway properties.
	Properties NatGatewayPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Sku: The nat gateway SKU.
	Sku *NatGatewaySku `json:"sku,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type NatGatewaysSpecType `json:"type"`

	//Zones: A list of availability zones denoting the zone in which Nat Gateway
	//should be deployed.
	Zones []string `json:"zones,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/NatGatewayPropertiesFormat
type NatGatewayPropertiesFormat struct {

	//IdleTimeoutInMinutes: The idle timeout of the nat gateway.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	//PublicIpAddresses: An array of public ip addresses associated with the nat
	//gateway resource.
	PublicIpAddresses []SubResource `json:"publicIpAddresses,omitempty"`

	//PublicIpPrefixes: An array of public ip prefixes associated with the nat gateway
	//resource.
	PublicIpPrefixes []SubResource `json:"publicIpPrefixes,omitempty"`
}

//Generated from:
type NatGatewayPropertiesFormat_Status struct {

	//IdleTimeoutInMinutes: The idle timeout of the nat gateway.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	//ProvisioningState: The provisioning state of the NAT gateway resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//PublicIpAddresses: An array of public ip addresses associated with the nat
	//gateway resource.
	PublicIpAddresses []SubResource_Status `json:"publicIpAddresses,omitempty"`

	//PublicIpPrefixes: An array of public ip prefixes associated with the nat gateway
	//resource.
	PublicIpPrefixes []SubResource_Status `json:"publicIpPrefixes,omitempty"`

	//ResourceGuid: The resource GUID property of the NAT gateway resource.
	ResourceGuid *string `json:"resourceGuid,omitempty"`

	//Subnets: An array of references to the subnets using this nat gateway resource.
	Subnets []SubResource_Status `json:"subnets,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/NatGatewaySku
type NatGatewaySku struct {

	//Name: Name of Nat Gateway SKU.
	Name *NatGatewaySkuName `json:"name,omitempty"`
}

//Generated from:
type NatGatewaySku_Status struct {

	//Name: Name of Nat Gateway SKU.
	Name *NatGatewaySkuStatusName `json:"name,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type NatGatewaysSpecApiVersion string

const NatGatewaysSpecApiVersion20200501 = NatGatewaysSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/natGateways"}
type NatGatewaysSpecType string

const NatGatewaysSpecTypeMicrosoftNetworkNatGateways = NatGatewaysSpecType("Microsoft.Network/natGateways")

// +kubebuilder:validation:Enum={"Standard"}
type NatGatewaySkuName string

const NatGatewaySkuNameStandard = NatGatewaySkuName("Standard")

// +kubebuilder:validation:Enum={"Standard"}
type NatGatewaySkuStatusName string

const NatGatewaySkuStatusNameStandard = NatGatewaySkuStatusName("Standard")

func init() {
	SchemeBuilder.Register(&NatGateways{}, &NatGatewaysList{})
}
