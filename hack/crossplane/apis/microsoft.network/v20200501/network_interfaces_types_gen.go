// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type NetworkInterfaces struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkInterfaces_Spec  `json:"spec,omitempty"`
	Status            NetworkInterface_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type NetworkInterfacesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkInterfaces `json:"items"`
}

type NetworkInterface_Status struct {
	AtProvider NetworkInterfacesObservation `json:"atProvider"`
}

type NetworkInterfaces_Spec struct {
	ForProvider NetworkInterfacesParameters `json:"forProvider"`
}

type NetworkInterfacesObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the network interface.
	Properties *NetworkInterfacePropertiesFormat_Status `json:"properties,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type NetworkInterfacesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion NetworkInterfacesSpecApiVersion `json:"apiVersion"`
	Comments   *string                         `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the network interface.
	Properties NetworkInterfacePropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type NetworkInterfacesSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/NetworkInterfacePropertiesFormat
type NetworkInterfacePropertiesFormat struct {

	//DnsSettings: The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettings `json:"dnsSettings,omitempty"`

	//EnableAcceleratedNetworking: If the network interface is accelerated networking
	//enabled.
	EnableAcceleratedNetworking *bool `json:"enableAcceleratedNetworking,omitempty"`

	//EnableIPForwarding: Indicates whether IP forwarding is enabled on this network
	//interface.
	EnableIPForwarding *bool `json:"enableIPForwarding,omitempty"`

	// +kubebuilder:validation:Required
	//IpConfigurations: A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfiguration `json:"ipConfigurations"`

	//NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *SubResource `json:"networkSecurityGroup,omitempty"`
}

//Generated from:
type NetworkInterfacePropertiesFormat_Status struct {

	//DnsSettings: The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettings_Status `json:"dnsSettings,omitempty"`

	//EnableAcceleratedNetworking: If the network interface is accelerated networking
	//enabled.
	EnableAcceleratedNetworking *bool `json:"enableAcceleratedNetworking,omitempty"`

	//EnableIPForwarding: Indicates whether IP forwarding is enabled on this network
	//interface.
	EnableIPForwarding *bool `json:"enableIPForwarding,omitempty"`

	//HostedWorkloads: A list of references to linked BareMetal resources.
	HostedWorkloads []string `json:"hostedWorkloads,omitempty"`

	//IpConfigurations: A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfiguration_Status `json:"ipConfigurations,omitempty"`

	//MacAddress: The MAC address of the network interface.
	MacAddress *string `json:"macAddress,omitempty"`

	//NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroup_Status `json:"networkSecurityGroup,omitempty"`

	//Primary: Whether this is a primary network interface on a virtual machine.
	Primary *bool `json:"primary,omitempty"`

	//PrivateEndpoint: A reference to the private endpoint to which the network
	//interface is linked.
	PrivateEndpoint *PrivateEndpoint_Status `json:"privateEndpoint,omitempty"`

	//ProvisioningState: The provisioning state of the network interface resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//ResourceGuid: The resource GUID property of the network interface resource.
	ResourceGuid *string `json:"resourceGuid,omitempty"`

	//TapConfigurations: A list of TapConfigurations of the network interface.
	TapConfigurations []NetworkInterfaceTapConfiguration_Status `json:"tapConfigurations,omitempty"`

	//VirtualMachine: The reference to a virtual machine.
	VirtualMachine *SubResource_Status `json:"virtualMachine,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type NetworkInterfacesSpecApiVersion string

const NetworkInterfacesSpecApiVersion20200501 = NetworkInterfacesSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/networkInterfaces"}
type NetworkInterfacesSpecType string

const NetworkInterfacesSpecTypeMicrosoftNetworkNetworkInterfaces = NetworkInterfacesSpecType("Microsoft.Network/networkInterfaces")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/NetworkInterfaceDnsSettings
type NetworkInterfaceDnsSettings struct {

	//DnsServers: List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch
	//to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined
	//with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `json:"dnsServers,omitempty"`

	//InternalDnsNameLabel: Relative DNS name for this NIC used for internal
	//communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `json:"internalDnsNameLabel,omitempty"`
}

//Generated from:
type NetworkInterfaceDnsSettings_Status struct {

	//AppliedDnsServers: If the VM that uses this NIC is part of an Availability Set,
	//then this list will have the union of all DNS servers from all NICs that are
	//part of the Availability Set. This property is what is configured on each of
	//those VMs.
	AppliedDnsServers []string `json:"appliedDnsServers,omitempty"`

	//DnsServers: List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch
	//to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined
	//with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `json:"dnsServers,omitempty"`

	//InternalDnsNameLabel: Relative DNS name for this NIC used for internal
	//communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `json:"internalDnsNameLabel,omitempty"`

	//InternalDomainNameSuffix: Even if internalDnsNameLabel is not specified, a DNS
	//entry is created for the primary NIC of the VM. This DNS name can be constructed
	//by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix *string `json:"internalDomainNameSuffix,omitempty"`

	//InternalFqdn: Fully qualified DNS name supporting internal communications
	//between VMs in the same virtual network.
	InternalFqdn *string `json:"internalFqdn,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/NetworkInterfaceIPConfiguration
type NetworkInterfaceIPConfiguration struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name string `json:"name"`

	//Properties: Network interface IP configuration properties.
	Properties *NetworkInterfaceIPConfigurationPropertiesFormat `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/NetworkInterfaceIPConfigurationPropertiesFormat
type NetworkInterfaceIPConfigurationPropertiesFormat struct {

	//ApplicationGatewayBackendAddressPools: The reference to
	//ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []SubResource `json:"applicationGatewayBackendAddressPools,omitempty"`

	//ApplicationSecurityGroups: Application security groups in which the IP
	//configuration is included.
	ApplicationSecurityGroups []SubResource `json:"applicationSecurityGroups,omitempty"`

	//LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool
	//resource.
	LoadBalancerBackendAddressPools []SubResource `json:"loadBalancerBackendAddressPools,omitempty"`

	//LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []SubResource `json:"loadBalancerInboundNatRules,omitempty"`

	//Primary: Whether this is a primary customer address on the network interface.
	Primary *bool `json:"primary,omitempty"`

	//PrivateIPAddress: Private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6.
	//Default is IPv4.
	PrivateIPAddressVersion *NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion `json:"privateIPAddressVersion,omitempty"`

	//PrivateIPAllocationMethod: The private IP address allocation method.
	PrivateIPAllocationMethod *NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod `json:"privateIPAllocationMethod,omitempty"`

	//PublicIPAddress: Public IP address bound to the IP configuration.
	PublicIPAddress *SubResource `json:"publicIPAddress,omitempty"`

	//Subnet: Subnet bound to the IP configuration.
	Subnet *SubResource `json:"subnet,omitempty"`

	//VirtualNetworkTaps: The reference to Virtual Network Taps.
	VirtualNetworkTaps []SubResource `json:"virtualNetworkTaps,omitempty"`
}

// +kubebuilder:validation:Enum={"IPv4","IPv6"}
type NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion string

const (
	NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersionIPv4 = NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion("IPv4")
	NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersionIPv6 = NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAddressVersion("IPv6")
)

// +kubebuilder:validation:Enum={"Dynamic","Static"}
type NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod string

const (
	NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethodDynamic = NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod("Dynamic")
	NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethodStatic  = NetworkInterfaceIPConfigurationPropertiesFormatPrivateIPAllocationMethod("Static")
)

func init() {
	SchemeBuilder.Register(&NetworkInterfaces{}, &NetworkInterfacesList{})
}
