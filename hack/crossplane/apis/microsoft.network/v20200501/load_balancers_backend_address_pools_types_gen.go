// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type LoadBalancersBackendAddressPools struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LoadBalancersBackendAddressPools_Spec `json:"spec,omitempty"`
	Status            BackendAddressPool_Status             `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LoadBalancersBackendAddressPoolsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoadBalancersBackendAddressPools `json:"items"`
}

type BackendAddressPool_Status struct {
	AtProvider LoadBalancersBackendAddressPoolsObservation `json:"atProvider"`
}

type LoadBalancersBackendAddressPools_Spec struct {
	ForProvider LoadBalancersBackendAddressPoolsParameters `json:"forProvider"`
}

type LoadBalancersBackendAddressPoolsObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within the set of backend address
	//pools used by the load balancer. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer backend address pool.
	Properties *BackendAddressPoolPropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Type of the resource.
	Type *string `json:"type,omitempty"`
}

type LoadBalancersBackendAddressPoolsParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion LoadBalancersBackendAddressPoolsSpecApiVersion `json:"apiVersion"`
	Comments   *string                                        `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location *v20150101.ResourceLocations `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of load balancer backend address pool.
	Properties BackendAddressPoolPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type LoadBalancersBackendAddressPoolsSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/BackendAddressPoolPropertiesFormat
type BackendAddressPoolPropertiesFormat struct {

	//LoadBalancerBackendAddresses: An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddress `json:"loadBalancerBackendAddresses,omitempty"`
}

//Generated from:
type BackendAddressPoolPropertiesFormat_Status struct {

	//BackendIPConfigurations: An array of references to IP addresses defined in
	//network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfiguration_Status `json:"backendIPConfigurations,omitempty"`

	//LoadBalancerBackendAddresses: An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddress_Status `json:"loadBalancerBackendAddresses,omitempty"`

	//LoadBalancingRules: An array of references to load balancing rules that use this
	//backend address pool.
	LoadBalancingRules []SubResource_Status `json:"loadBalancingRules,omitempty"`

	//OutboundRule: A reference to an outbound rule that uses this backend address
	//pool.
	OutboundRule *SubResource_Status `json:"outboundRule,omitempty"`

	//OutboundRules: An array of references to outbound rules that use this backend
	//address pool.
	OutboundRules []SubResource_Status `json:"outboundRules,omitempty"`

	//ProvisioningState: The provisioning state of the backend address pool resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type LoadBalancersBackendAddressPoolsSpecApiVersion string

const LoadBalancersBackendAddressPoolsSpecApiVersion20200501 = LoadBalancersBackendAddressPoolsSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/loadBalancers/backendAddressPools"}
type LoadBalancersBackendAddressPoolsSpecType string

const LoadBalancersBackendAddressPoolsSpecTypeMicrosoftNetworkLoadBalancersBackendAddressPools = LoadBalancersBackendAddressPoolsSpecType("Microsoft.Network/loadBalancers/backendAddressPools")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/LoadBalancerBackendAddress
type LoadBalancerBackendAddress struct {

	//Name: Name of the backend address.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer backend address pool.
	Properties *LoadBalancerBackendAddressPropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type LoadBalancerBackendAddress_Status struct {

	//Name: Name of the backend address.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer backend address pool.
	Properties *LoadBalancerBackendAddressPropertiesFormat_Status `json:"properties,omitempty"`
}

//Generated from:
type NetworkInterfaceIPConfiguration_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Network interface IP configuration properties.
	Properties *NetworkInterfaceIPConfigurationPropertiesFormat_Status `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/LoadBalancerBackendAddressPropertiesFormat
type LoadBalancerBackendAddressPropertiesFormat struct {

	//IpAddress: IP Address belonging to the referenced virtual network.
	IpAddress *string `json:"ipAddress,omitempty"`

	//VirtualNetwork: Reference to an existing virtual network.
	VirtualNetwork *SubResource `json:"virtualNetwork,omitempty"`
}

//Generated from:
type LoadBalancerBackendAddressPropertiesFormat_Status struct {

	//IpAddress: IP Address belonging to the referenced virtual network.
	IpAddress *string `json:"ipAddress,omitempty"`

	//NetworkInterfaceIPConfiguration: Reference to IP address defined in network
	//interfaces.
	NetworkInterfaceIPConfiguration *NetworkInterfaceIPConfiguration_Status `json:"networkInterfaceIPConfiguration,omitempty"`

	//VirtualNetwork: Reference to an existing virtual network.
	VirtualNetwork *VirtualNetwork_Status `json:"virtualNetwork,omitempty"`
}

//Generated from:
type NetworkInterfaceIPConfigurationPropertiesFormat_Status struct {

	//ApplicationGatewayBackendAddressPools: The reference to
	//ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPool_Status `json:"applicationGatewayBackendAddressPools,omitempty"`

	//ApplicationSecurityGroups: Application security groups in which the IP
	//configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroup_Status `json:"applicationSecurityGroups,omitempty"`

	//LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool
	//resource.
	LoadBalancerBackendAddressPools []BackendAddressPool_Status `json:"loadBalancerBackendAddressPools,omitempty"`

	//LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRule_Status `json:"loadBalancerInboundNatRules,omitempty"`

	//Primary: Whether this is a primary customer address on the network interface.
	Primary *bool `json:"primary,omitempty"`

	//PrivateIPAddress: Private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6.
	//Default is IPv4.
	PrivateIPAddressVersion *IPVersion_Status `json:"privateIPAddressVersion,omitempty"`

	//PrivateIPAllocationMethod: The private IP address allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod_Status `json:"privateIPAllocationMethod,omitempty"`

	//PrivateLinkConnectionProperties: PrivateLinkConnection properties for the
	//network interface.
	PrivateLinkConnectionProperties *NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status `json:"privateLinkConnectionProperties,omitempty"`

	//ProvisioningState: The provisioning state of the network interface IP
	//configuration.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//PublicIPAddress: Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddress_Status `json:"publicIPAddress,omitempty"`

	//Subnet: Subnet bound to the IP configuration.
	Subnet *Subnet_Status `json:"subnet,omitempty"`

	//VirtualNetworkTaps: The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTap_Status `json:"virtualNetworkTaps,omitempty"`
}

//Generated from:
type NetworkInterfaceIPConfigurationPrivateLinkConnectionProperties_Status struct {

	//Fqdns: List of FQDNs for current private link connection.
	Fqdns []string `json:"fqdns,omitempty"`

	//GroupId: The group ID for current private link connection.
	GroupId *string `json:"groupId,omitempty"`

	//RequiredMemberName: The required member name for current private link connection.
	RequiredMemberName *string `json:"requiredMemberName,omitempty"`
}

func init() {
	SchemeBuilder.Register(&LoadBalancersBackendAddressPools{}, &LoadBalancersBackendAddressPoolsList{})
}
