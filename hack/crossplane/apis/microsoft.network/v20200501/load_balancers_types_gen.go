// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type LoadBalancers struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LoadBalancers_Spec  `json:"spec,omitempty"`
	Status            LoadBalancer_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type LoadBalancersList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LoadBalancers `json:"items"`
}

type LoadBalancer_Status struct {
	AtProvider LoadBalancersObservation `json:"atProvider"`
}

type LoadBalancers_Spec struct {
	ForProvider LoadBalancersParameters `json:"forProvider"`
}

type LoadBalancersObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Location: Resource location.
	Location *string `json:"location,omitempty"`

	//Name: Resource name.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer.
	Properties *LoadBalancerPropertiesFormat_Status `json:"properties,omitempty"`

	//Sku: The load balancer SKU.
	Sku *LoadBalancerSku_Status `json:"sku,omitempty"`

	//Tags: Resource tags.
	Tags map[string]string `json:"tags,omitempty"`

	//Type: Resource type.
	Type *string `json:"type,omitempty"`
}

type LoadBalancersParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion LoadBalancersSpecApiVersion `json:"apiVersion"`
	Comments   *string                     `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location string `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of load balancer.
	Properties LoadBalancerPropertiesFormat `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Sku: The load balancer SKU.
	Sku *LoadBalancerSku `json:"sku,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type LoadBalancersSpecType `json:"type"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/LoadBalancerPropertiesFormat
type LoadBalancerPropertiesFormat struct {

	//BackendAddressPools: Collection of backend address pools used by a load balancer.
	BackendAddressPools []BackendAddressPool `json:"backendAddressPools,omitempty"`

	//FrontendIPConfigurations: Object representing the frontend IPs to be used for
	//the load balancer.
	FrontendIPConfigurations []FrontendIPConfiguration `json:"frontendIPConfigurations,omitempty"`

	//InboundNatPools: Defines an external port range for inbound NAT to a single
	//backend port on NICs associated with a load balancer. Inbound NAT rules are
	//created automatically for each NIC associated with the Load Balancer using an
	//external port from this range. Defining an Inbound NAT pool on your Load
	//Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT
	//pools are referenced from virtual machine scale sets. NICs that are associated
	//with individual virtual machines cannot reference an inbound NAT pool. They have
	//to reference individual inbound NAT rules.
	InboundNatPools []InboundNatPool `json:"inboundNatPools,omitempty"`

	//InboundNatRules: Collection of inbound NAT Rules used by a load balancer.
	//Defining inbound NAT rules on your load balancer is mutually exclusive with
	//defining an inbound NAT pool. Inbound NAT pools are referenced from virtual
	//machine scale sets. NICs that are associated with individual virtual machines
	//cannot reference an Inbound NAT pool. They have to reference individual inbound
	//NAT rules.
	InboundNatRules []InboundNatRule `json:"inboundNatRules,omitempty"`

	//LoadBalancingRules: Object collection representing the load balancing rules Gets
	//the provisioning.
	LoadBalancingRules []LoadBalancingRule `json:"loadBalancingRules,omitempty"`

	//OutboundRules: The outbound rules.
	OutboundRules []OutboundRule `json:"outboundRules,omitempty"`

	//Probes: Collection of probe objects used in the load balancer.
	Probes []Probe `json:"probes,omitempty"`
}

//Generated from:
type LoadBalancerPropertiesFormat_Status struct {

	//BackendAddressPools: Collection of backend address pools used by a load balancer.
	BackendAddressPools []BackendAddressPool_Status `json:"backendAddressPools,omitempty"`

	//FrontendIPConfigurations: Object representing the frontend IPs to be used for
	//the load balancer.
	FrontendIPConfigurations []FrontendIPConfiguration_Status `json:"frontendIPConfigurations,omitempty"`

	//InboundNatPools: Defines an external port range for inbound NAT to a single
	//backend port on NICs associated with a load balancer. Inbound NAT rules are
	//created automatically for each NIC associated with the Load Balancer using an
	//external port from this range. Defining an Inbound NAT pool on your Load
	//Balancer is mutually exclusive with defining inbound Nat rules. Inbound NAT
	//pools are referenced from virtual machine scale sets. NICs that are associated
	//with individual virtual machines cannot reference an inbound NAT pool. They have
	//to reference individual inbound NAT rules.
	InboundNatPools []InboundNatPool_Status `json:"inboundNatPools,omitempty"`

	//InboundNatRules: Collection of inbound NAT Rules used by a load balancer.
	//Defining inbound NAT rules on your load balancer is mutually exclusive with
	//defining an inbound NAT pool. Inbound NAT pools are referenced from virtual
	//machine scale sets. NICs that are associated with individual virtual machines
	//cannot reference an Inbound NAT pool. They have to reference individual inbound
	//NAT rules.
	InboundNatRules []InboundNatRule_Status `json:"inboundNatRules,omitempty"`

	//LoadBalancingRules: Object collection representing the load balancing rules Gets
	//the provisioning.
	LoadBalancingRules []LoadBalancingRule_Status `json:"loadBalancingRules,omitempty"`

	//OutboundRules: The outbound rules.
	OutboundRules []OutboundRule_Status `json:"outboundRules,omitempty"`

	//Probes: Collection of probe objects used in the load balancer.
	Probes []Probe_Status `json:"probes,omitempty"`

	//ProvisioningState: The provisioning state of the load balancer resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//ResourceGuid: The resource GUID property of the load balancer resource.
	ResourceGuid *string `json:"resourceGuid,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/LoadBalancerSku
type LoadBalancerSku struct {

	//Name: Name of a load balancer SKU.
	Name *LoadBalancerSkuName `json:"name,omitempty"`
}

//Generated from:
type LoadBalancerSku_Status struct {

	//Name: Name of a load balancer SKU.
	Name *LoadBalancerSkuStatusName `json:"name,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type LoadBalancersSpecApiVersion string

const LoadBalancersSpecApiVersion20200501 = LoadBalancersSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/loadBalancers"}
type LoadBalancersSpecType string

const LoadBalancersSpecTypeMicrosoftNetworkLoadBalancers = LoadBalancersSpecType("Microsoft.Network/loadBalancers")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/BackendAddressPool
type BackendAddressPool struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within the set of backend address
	//pools used by the load balancer. This name can be used to access the resource.
	Name string `json:"name"`

	//Properties: Properties of load balancer backend address pool.
	Properties *BackendAddressPoolPropertiesFormat `json:"properties,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FrontendIPConfiguration
type FrontendIPConfiguration struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within the set of frontend IP
	//configurations used by the load balancer. This name can be used to access the
	//resource.
	Name string `json:"name"`

	//Properties: Properties of the load balancer probe.
	Properties *FrontendIPConfigurationPropertiesFormat `json:"properties,omitempty"`

	//Zones: A list of availability zones denoting the IP allocated for the resource
	//needs to come from.
	Zones []string `json:"zones,omitempty"`
}

//Generated from:
type FrontendIPConfiguration_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within the set of frontend IP
	//configurations used by the load balancer. This name can be used to access the
	//resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the load balancer probe.
	Properties *FrontendIPConfigurationPropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Type of the resource.
	Type *string `json:"type,omitempty"`

	//Zones: A list of availability zones denoting the IP allocated for the resource
	//needs to come from.
	Zones []string `json:"zones,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/InboundNatPool
type InboundNatPool struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within the set of inbound NAT
	//pools used by the load balancer. This name can be used to access the resource.
	Name string `json:"name"`

	//Properties: Properties of load balancer inbound nat pool.
	Properties *InboundNatPoolPropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type InboundNatPool_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within the set of inbound NAT
	//pools used by the load balancer. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer inbound nat pool.
	Properties *InboundNatPoolPropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Type of the resource.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/InboundNatRule
type InboundNatRule struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within the set of inbound NAT
	//rules used by the load balancer. This name can be used to access the resource.
	Name string `json:"name"`

	//Properties: Properties of load balancer inbound nat rule.
	Properties *InboundNatRulePropertiesFormat `json:"properties,omitempty"`
}

// +kubebuilder:validation:Enum={"Basic","Standard"}
type LoadBalancerSkuName string

const (
	LoadBalancerSkuNameBasic    = LoadBalancerSkuName("Basic")
	LoadBalancerSkuNameStandard = LoadBalancerSkuName("Standard")
)

// +kubebuilder:validation:Enum={"Basic","Standard"}
type LoadBalancerSkuStatusName string

const (
	LoadBalancerSkuStatusNameBasic    = LoadBalancerSkuStatusName("Basic")
	LoadBalancerSkuStatusNameStandard = LoadBalancerSkuStatusName("Standard")
)

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/LoadBalancingRule
type LoadBalancingRule struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within the set of load balancing
	//rules used by the load balancer. This name can be used to access the resource.
	Name string `json:"name"`

	//Properties: Properties of load balancer load balancing rule.
	Properties *LoadBalancingRulePropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type LoadBalancingRule_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within the set of load balancing
	//rules used by the load balancer. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer load balancing rule.
	Properties *LoadBalancingRulePropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Type of the resource.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/OutboundRule
type OutboundRule struct {

	//Name: The name of the resource that is unique within the set of outbound rules
	//used by the load balancer. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer outbound rule.
	Properties *OutboundRulePropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type OutboundRule_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within the set of outbound rules
	//used by the load balancer. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer outbound rule.
	Properties *OutboundRulePropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Type of the resource.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/Probe
type Probe struct {

	// +kubebuilder:validation:Required
	//Name: The name of the resource that is unique within the set of probes used by
	//the load balancer. This name can be used to access the resource.
	Name string `json:"name"`

	//Properties: Properties of load balancer probe.
	Properties *ProbePropertiesFormat `json:"properties,omitempty"`
}

//Generated from:
type Probe_Status struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within the set of probes used by
	//the load balancer. This name can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of load balancer probe.
	Properties *ProbePropertiesFormat_Status `json:"properties,omitempty"`

	//Type: Type of the resource.
	Type *string `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FrontendIPConfigurationPropertiesFormat
type FrontendIPConfigurationPropertiesFormat struct {

	//PrivateIPAddress: The private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6.
	//Default is taken as IPv4.
	PrivateIPAddressVersion *FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion `json:"privateIPAddressVersion,omitempty"`

	//PrivateIPAllocationMethod: The Private IP allocation method.
	PrivateIPAllocationMethod *FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod `json:"privateIPAllocationMethod,omitempty"`

	//PublicIPAddress: The reference to the Public IP resource.
	PublicIPAddress *SubResource `json:"publicIPAddress,omitempty"`

	//PublicIPPrefix: The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResource `json:"publicIPPrefix,omitempty"`

	//Subnet: The reference to the subnet resource.
	Subnet *SubResource `json:"subnet,omitempty"`
}

//Generated from:
type FrontendIPConfigurationPropertiesFormat_Status struct {

	//InboundNatPools: An array of references to inbound pools that use this frontend
	//IP.
	InboundNatPools []SubResource_Status `json:"inboundNatPools,omitempty"`

	//InboundNatRules: An array of references to inbound rules that use this frontend
	//IP.
	InboundNatRules []SubResource_Status `json:"inboundNatRules,omitempty"`

	//LoadBalancingRules: An array of references to load balancing rules that use this
	//frontend IP.
	LoadBalancingRules []SubResource_Status `json:"loadBalancingRules,omitempty"`

	//OutboundRules: An array of references to outbound rules that use this frontend
	//IP.
	OutboundRules []SubResource_Status `json:"outboundRules,omitempty"`

	//PrivateIPAddress: The private IP address of the IP configuration.
	PrivateIPAddress *string `json:"privateIPAddress,omitempty"`

	//PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6.
	//Default is taken as IPv4.
	PrivateIPAddressVersion *IPVersion_Status `json:"privateIPAddressVersion,omitempty"`

	//PrivateIPAllocationMethod: The Private IP allocation method.
	PrivateIPAllocationMethod *IPAllocationMethod_Status `json:"privateIPAllocationMethod,omitempty"`

	//ProvisioningState: The provisioning state of the frontend IP configuration
	//resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//PublicIPAddress: The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddress_Status `json:"publicIPAddress,omitempty"`

	//PublicIPPrefix: The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResource_Status `json:"publicIPPrefix,omitempty"`

	//Subnet: The reference to the subnet resource.
	Subnet *Subnet_Status `json:"subnet,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/InboundNatPoolPropertiesFormat
type InboundNatPoolPropertiesFormat struct {

	// +kubebuilder:validation:Required
	//BackendPort: The port used for internal connections on the endpoint. Acceptable
	//values are between 1 and 65535.
	BackendPort int `json:"backendPort"`

	//EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP
	//capability required to configure a SQL AlwaysOn Availability Group. This setting
	//is required when using the SQL AlwaysOn Availability Groups in SQL server. This
	//setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `json:"enableFloatingIP,omitempty"`

	//EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or
	//unexpected connection termination. This element is only used when the protocol
	//is set to TCP.
	EnableTcpReset *bool `json:"enableTcpReset,omitempty"`

	// +kubebuilder:validation:Required
	//FrontendIPConfiguration: A reference to frontend IP addresses.
	FrontendIPConfiguration SubResource `json:"frontendIPConfiguration"`

	// +kubebuilder:validation:Required
	//FrontendPortRangeEnd: The last port number in the range of external ports that
	//will be used to provide Inbound Nat to NICs associated with a load balancer.
	//Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `json:"frontendPortRangeEnd"`

	// +kubebuilder:validation:Required
	//FrontendPortRangeStart: The first port number in the range of external ports
	//that will be used to provide Inbound Nat to NICs associated with a load
	//balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `json:"frontendPortRangeStart"`

	//IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be
	//set between 4 and 30 minutes. The default value is 4 minutes. This element is
	//only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	// +kubebuilder:validation:Required
	//Protocol: The reference to the transport protocol used by the inbound NAT pool.
	Protocol InboundNatPoolPropertiesFormatProtocol `json:"protocol"`
}

//Generated from:
type InboundNatPoolPropertiesFormat_Status struct {

	// +kubebuilder:validation:Required
	//BackendPort: The port used for internal connections on the endpoint. Acceptable
	//values are between 1 and 65535.
	BackendPort int `json:"backendPort"`

	//EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP
	//capability required to configure a SQL AlwaysOn Availability Group. This setting
	//is required when using the SQL AlwaysOn Availability Groups in SQL server. This
	//setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `json:"enableFloatingIP,omitempty"`

	//EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or
	//unexpected connection termination. This element is only used when the protocol
	//is set to TCP.
	EnableTcpReset *bool `json:"enableTcpReset,omitempty"`

	//FrontendIPConfiguration: A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource_Status `json:"frontendIPConfiguration,omitempty"`

	// +kubebuilder:validation:Required
	//FrontendPortRangeEnd: The last port number in the range of external ports that
	//will be used to provide Inbound Nat to NICs associated with a load balancer.
	//Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `json:"frontendPortRangeEnd"`

	// +kubebuilder:validation:Required
	//FrontendPortRangeStart: The first port number in the range of external ports
	//that will be used to provide Inbound Nat to NICs associated with a load
	//balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `json:"frontendPortRangeStart"`

	//IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be
	//set between 4 and 30 minutes. The default value is 4 minutes. This element is
	//only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	// +kubebuilder:validation:Required
	//Protocol: The reference to the transport protocol used by the inbound NAT pool.
	Protocol TransportProtocol_Status `json:"protocol"`

	//ProvisioningState: The provisioning state of the inbound NAT pool resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/LoadBalancingRulePropertiesFormat
type LoadBalancingRulePropertiesFormat struct {

	//BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly
	//load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResource `json:"backendAddressPool,omitempty"`

	// +kubebuilder:validation:Required
	//BackendPort: The port used for internal connections on the endpoint. Acceptable
	//values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort int `json:"backendPort"`

	//DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the
	//publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `json:"disableOutboundSnat,omitempty"`

	//EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP
	//capability required to configure a SQL AlwaysOn Availability Group. This setting
	//is required when using the SQL AlwaysOn Availability Groups in SQL server. This
	//setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `json:"enableFloatingIP,omitempty"`

	//EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or
	//unexpected connection termination. This element is only used when the protocol
	//is set to TCP.
	EnableTcpReset *bool `json:"enableTcpReset,omitempty"`

	// +kubebuilder:validation:Required
	//FrontendIPConfiguration: A reference to frontend IP addresses.
	FrontendIPConfiguration SubResource `json:"frontendIPConfiguration"`

	// +kubebuilder:validation:Required
	//FrontendPort: The port for the external endpoint. Port numbers for each rule
	//must be unique within the Load Balancer. Acceptable values are between 0 and
	//65534. Note that value 0 enables "Any Port".
	FrontendPort int `json:"frontendPort"`

	//IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be
	//set between 4 and 30 minutes. The default value is 4 minutes. This element is
	//only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	//LoadDistribution: The load distribution policy for this rule.
	LoadDistribution *LoadBalancingRulePropertiesFormatLoadDistribution `json:"loadDistribution,omitempty"`

	//Probe: The reference to the load balancer probe used by the load balancing rule.
	Probe *SubResource `json:"probe,omitempty"`

	// +kubebuilder:validation:Required
	//Protocol: The reference to the transport protocol used by the load balancing
	//rule.
	Protocol LoadBalancingRulePropertiesFormatProtocol `json:"protocol"`
}

//Generated from:
type LoadBalancingRulePropertiesFormat_Status struct {

	//BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly
	//load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResource_Status `json:"backendAddressPool,omitempty"`

	//BackendPort: The port used for internal connections on the endpoint. Acceptable
	//values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort *int `json:"backendPort,omitempty"`

	//DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the
	//publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `json:"disableOutboundSnat,omitempty"`

	//EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP
	//capability required to configure a SQL AlwaysOn Availability Group. This setting
	//is required when using the SQL AlwaysOn Availability Groups in SQL server. This
	//setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `json:"enableFloatingIP,omitempty"`

	//EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or
	//unexpected connection termination. This element is only used when the protocol
	//is set to TCP.
	EnableTcpReset *bool `json:"enableTcpReset,omitempty"`

	//FrontendIPConfiguration: A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource_Status `json:"frontendIPConfiguration,omitempty"`

	// +kubebuilder:validation:Required
	//FrontendPort: The port for the external endpoint. Port numbers for each rule
	//must be unique within the Load Balancer. Acceptable values are between 0 and
	//65534. Note that value 0 enables "Any Port".
	FrontendPort int `json:"frontendPort"`

	//IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be
	//set between 4 and 30 minutes. The default value is 4 minutes. This element is
	//only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	//LoadDistribution: The load distribution policy for this rule.
	LoadDistribution *LoadBalancingRulePropertiesFormatStatusLoadDistribution `json:"loadDistribution,omitempty"`

	//Probe: The reference to the load balancer probe used by the load balancing rule.
	Probe *SubResource_Status `json:"probe,omitempty"`

	// +kubebuilder:validation:Required
	//Protocol: The reference to the transport protocol used by the load balancing
	//rule.
	Protocol TransportProtocol_Status `json:"protocol"`

	//ProvisioningState: The provisioning state of the load balancing rule resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/OutboundRulePropertiesFormat
type OutboundRulePropertiesFormat struct {

	//AllocatedOutboundPorts: The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `json:"allocatedOutboundPorts,omitempty"`

	// +kubebuilder:validation:Required
	//BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly
	//load balanced across IPs in the backend IPs.
	BackendAddressPool SubResource `json:"backendAddressPool"`

	//EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or
	//unexpected connection termination. This element is only used when the protocol
	//is set to TCP.
	EnableTcpReset *bool `json:"enableTcpReset,omitempty"`

	// +kubebuilder:validation:Required
	//FrontendIPConfigurations: The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResource `json:"frontendIPConfigurations"`

	//IdleTimeoutInMinutes: The timeout for the TCP idle connection.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	// +kubebuilder:validation:Required
	//Protocol: The protocol for the outbound rule in load balancer.
	Protocol OutboundRulePropertiesFormatProtocol `json:"protocol"`
}

//Generated from:
type OutboundRulePropertiesFormat_Status struct {

	//AllocatedOutboundPorts: The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `json:"allocatedOutboundPorts,omitempty"`

	// +kubebuilder:validation:Required
	//BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly
	//load balanced across IPs in the backend IPs.
	BackendAddressPool SubResource_Status `json:"backendAddressPool"`

	//EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or
	//unexpected connection termination. This element is only used when the protocol
	//is set to TCP.
	EnableTcpReset *bool `json:"enableTcpReset,omitempty"`

	// +kubebuilder:validation:Required
	//FrontendIPConfigurations: The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResource_Status `json:"frontendIPConfigurations"`

	//IdleTimeoutInMinutes: The timeout for the TCP idle connection.
	IdleTimeoutInMinutes *int `json:"idleTimeoutInMinutes,omitempty"`

	// +kubebuilder:validation:Required
	//Protocol: The protocol for the outbound rule in load balancer.
	Protocol OutboundRulePropertiesFormatStatusProtocol `json:"protocol"`

	//ProvisioningState: The provisioning state of the outbound rule resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/ProbePropertiesFormat
type ProbePropertiesFormat struct {

	//IntervalInSeconds: The interval, in seconds, for how frequently to probe the
	//endpoint for health status. Typically, the interval is slightly less than half
	//the allocated timeout period (in seconds) which allows two full probes before
	//taking the instance out of rotation. The default value is 15, the minimum value
	//is 5.
	IntervalInSeconds *int `json:"intervalInSeconds,omitempty"`

	// +kubebuilder:validation:Required
	//NumberOfProbes: The number of probes where if no response, will result in
	//stopping further traffic from being delivered to the endpoint. This values
	//allows endpoints to be taken out of rotation faster or slower than the typical
	//times used in Azure.
	NumberOfProbes int `json:"numberOfProbes"`

	// +kubebuilder:validation:Required
	//Port: The port for communicating the probe. Possible values range from 1 to
	//65535, inclusive.
	Port int `json:"port"`

	// +kubebuilder:validation:Required
	//Protocol: The protocol of the end point. If 'Tcp' is specified, a received ACK
	//is required for the probe to be successful. If 'Http' or 'Https' is specified, a
	//200 OK response from the specifies URI is required for the probe to be
	//successful.
	Protocol ProbePropertiesFormatProtocol `json:"protocol"`

	//RequestPath: The URI used for requesting health status from the VM. Path is
	//required if a protocol is set to http. Otherwise, it is not allowed. There is no
	//default value.
	RequestPath *string `json:"requestPath,omitempty"`
}

//Generated from:
type ProbePropertiesFormat_Status struct {

	//IntervalInSeconds: The interval, in seconds, for how frequently to probe the
	//endpoint for health status. Typically, the interval is slightly less than half
	//the allocated timeout period (in seconds) which allows two full probes before
	//taking the instance out of rotation. The default value is 15, the minimum value
	//is 5.
	IntervalInSeconds *int `json:"intervalInSeconds,omitempty"`

	//LoadBalancingRules: The load balancer rules that use this probe.
	LoadBalancingRules []SubResource_Status `json:"loadBalancingRules,omitempty"`

	//NumberOfProbes: The number of probes where if no response, will result in
	//stopping further traffic from being delivered to the endpoint. This values
	//allows endpoints to be taken out of rotation faster or slower than the typical
	//times used in Azure.
	NumberOfProbes *int `json:"numberOfProbes,omitempty"`

	// +kubebuilder:validation:Required
	//Port: The port for communicating the probe. Possible values range from 1 to
	//65535, inclusive.
	Port int `json:"port"`

	// +kubebuilder:validation:Required
	//Protocol: The protocol of the end point. If 'Tcp' is specified, a received ACK
	//is required for the probe to be successful. If 'Http' or 'Https' is specified, a
	//200 OK response from the specifies URI is required for the probe to be
	//successful.
	Protocol ProbePropertiesFormatStatusProtocol `json:"protocol"`

	//ProvisioningState: The provisioning state of the probe resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//RequestPath: The URI used for requesting health status from the VM. Path is
	//required if a protocol is set to http. Otherwise, it is not allowed. There is no
	//default value.
	RequestPath *string `json:"requestPath,omitempty"`
}

// +kubebuilder:validation:Enum={"IPv4","IPv6"}
type FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion string

const (
	FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersionIPv4 = FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion("IPv4")
	FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersionIPv6 = FrontendIPConfigurationPropertiesFormatPrivateIPAddressVersion("IPv6")
)

// +kubebuilder:validation:Enum={"Dynamic","Static"}
type FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod string

const (
	FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethodDynamic = FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod("Dynamic")
	FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethodStatic  = FrontendIPConfigurationPropertiesFormatPrivateIPAllocationMethod("Static")
)

// +kubebuilder:validation:Enum={"All","Tcp","Udp"}
type InboundNatPoolPropertiesFormatProtocol string

const (
	InboundNatPoolPropertiesFormatProtocolAll = InboundNatPoolPropertiesFormatProtocol("All")
	InboundNatPoolPropertiesFormatProtocolTcp = InboundNatPoolPropertiesFormatProtocol("Tcp")
	InboundNatPoolPropertiesFormatProtocolUdp = InboundNatPoolPropertiesFormatProtocol("Udp")
)

// +kubebuilder:validation:Enum={"Default","SourceIP","SourceIPProtocol"}
type LoadBalancingRulePropertiesFormatLoadDistribution string

const (
	LoadBalancingRulePropertiesFormatLoadDistributionDefault          = LoadBalancingRulePropertiesFormatLoadDistribution("Default")
	LoadBalancingRulePropertiesFormatLoadDistributionSourceIP         = LoadBalancingRulePropertiesFormatLoadDistribution("SourceIP")
	LoadBalancingRulePropertiesFormatLoadDistributionSourceIPProtocol = LoadBalancingRulePropertiesFormatLoadDistribution("SourceIPProtocol")
)

// +kubebuilder:validation:Enum={"All","Tcp","Udp"}
type LoadBalancingRulePropertiesFormatProtocol string

const (
	LoadBalancingRulePropertiesFormatProtocolAll = LoadBalancingRulePropertiesFormatProtocol("All")
	LoadBalancingRulePropertiesFormatProtocolTcp = LoadBalancingRulePropertiesFormatProtocol("Tcp")
	LoadBalancingRulePropertiesFormatProtocolUdp = LoadBalancingRulePropertiesFormatProtocol("Udp")
)

// +kubebuilder:validation:Enum={"Default","SourceIP","SourceIPProtocol"}
type LoadBalancingRulePropertiesFormatStatusLoadDistribution string

const (
	LoadBalancingRulePropertiesFormatStatusLoadDistributionDefault          = LoadBalancingRulePropertiesFormatStatusLoadDistribution("Default")
	LoadBalancingRulePropertiesFormatStatusLoadDistributionSourceIP         = LoadBalancingRulePropertiesFormatStatusLoadDistribution("SourceIP")
	LoadBalancingRulePropertiesFormatStatusLoadDistributionSourceIPProtocol = LoadBalancingRulePropertiesFormatStatusLoadDistribution("SourceIPProtocol")
)

// +kubebuilder:validation:Enum={"All","Tcp","Udp"}
type OutboundRulePropertiesFormatProtocol string

const (
	OutboundRulePropertiesFormatProtocolAll = OutboundRulePropertiesFormatProtocol("All")
	OutboundRulePropertiesFormatProtocolTcp = OutboundRulePropertiesFormatProtocol("Tcp")
	OutboundRulePropertiesFormatProtocolUdp = OutboundRulePropertiesFormatProtocol("Udp")
)

// +kubebuilder:validation:Enum={"All","Tcp","Udp"}
type OutboundRulePropertiesFormatStatusProtocol string

const (
	OutboundRulePropertiesFormatStatusProtocolAll = OutboundRulePropertiesFormatStatusProtocol("All")
	OutboundRulePropertiesFormatStatusProtocolTcp = OutboundRulePropertiesFormatStatusProtocol("Tcp")
	OutboundRulePropertiesFormatStatusProtocolUdp = OutboundRulePropertiesFormatStatusProtocol("Udp")
)

// +kubebuilder:validation:Enum={"Http","Https","Tcp"}
type ProbePropertiesFormatProtocol string

const (
	ProbePropertiesFormatProtocolHttp  = ProbePropertiesFormatProtocol("Http")
	ProbePropertiesFormatProtocolHttps = ProbePropertiesFormatProtocol("Https")
	ProbePropertiesFormatProtocolTcp   = ProbePropertiesFormatProtocol("Tcp")
)

// +kubebuilder:validation:Enum={"Http","Https","Tcp"}
type ProbePropertiesFormatStatusProtocol string

const (
	ProbePropertiesFormatStatusProtocolHttp  = ProbePropertiesFormatStatusProtocol("Http")
	ProbePropertiesFormatStatusProtocolHttps = ProbePropertiesFormatStatusProtocol("Https")
	ProbePropertiesFormatStatusProtocolTcp   = ProbePropertiesFormatStatusProtocol("Tcp")
)

func init() {
	SchemeBuilder.Register(&LoadBalancers{}, &LoadBalancersList{})
}
