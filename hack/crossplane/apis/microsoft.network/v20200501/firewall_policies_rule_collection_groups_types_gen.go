// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"encoding/json"
	"fmt"
	"github.com/Azure/k8s-infra/hack/generated/apis/deploymenttemplate/v20150101"
	"github.com/Azure/k8s-infra/hack/generated/pkg/genruntime"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type FirewallPoliciesRuleCollectionGroups struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallPoliciesRuleCollectionGroups_Spec `json:"spec,omitempty"`
	Status            FirewallPolicyRuleCollectionGroup_Status  `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type FirewallPoliciesRuleCollectionGroupsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallPoliciesRuleCollectionGroups `json:"items"`
}

type FirewallPoliciesRuleCollectionGroups_Spec struct {
	ForProvider FirewallPoliciesRuleCollectionGroupsParameters `json:"forProvider"`
}

type FirewallPolicyRuleCollectionGroup_Status struct {
	AtProvider FirewallPoliciesRuleCollectionGroupsObservation `json:"atProvider"`
}

type FirewallPoliciesRuleCollectionGroupsObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: The properties of the firewall policy rule collection group.
	Properties *FirewallPolicyRuleCollectionGroupProperties_Status `json:"properties,omitempty"`

	//Type: Rule Group type.
	Type *string `json:"type,omitempty"`
}

type FirewallPoliciesRuleCollectionGroupsParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion FirewallPoliciesRuleCollectionGroupsSpecApiVersion `json:"apiVersion"`
	Comments   *string                                            `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location *v20150101.ResourceLocations `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: The properties of the firewall policy rule collection group.
	Properties FirewallPolicyRuleCollectionGroupProperties `json:"properties"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type FirewallPoliciesRuleCollectionGroupsSpecType `json:"type"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type FirewallPoliciesRuleCollectionGroupsSpecApiVersion string

const FirewallPoliciesRuleCollectionGroupsSpecApiVersion20200501 = FirewallPoliciesRuleCollectionGroupsSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/firewallPolicies/ruleCollectionGroups"}
type FirewallPoliciesRuleCollectionGroupsSpecType string

const FirewallPoliciesRuleCollectionGroupsSpecTypeMicrosoftNetworkFirewallPoliciesRuleCollectionGroups = FirewallPoliciesRuleCollectionGroupsSpecType("Microsoft.Network/firewallPolicies/ruleCollectionGroups")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyRuleCollectionGroupProperties
type FirewallPolicyRuleCollectionGroupProperties struct {

	//Priority: Priority of the Firewall Policy Rule Collection Group resource.
	Priority *int `json:"priority,omitempty"`

	//RuleCollections: Group of Firewall Policy rule collections.
	RuleCollections []FirewallPolicyRuleCollection `json:"ruleCollections,omitempty"`
}

//Generated from:
type FirewallPolicyRuleCollectionGroupProperties_Status struct {

	//Priority: Priority of the Firewall Policy Rule Collection Group resource.
	Priority *int `json:"priority,omitempty"`

	//ProvisioningState: The provisioning state of the firewall policy rule collection
	//group resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//RuleCollections: Group of Firewall Policy rule collections.
	RuleCollections []FirewallPolicyRuleCollection_Status `json:"ruleCollections,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyRuleCollection
type FirewallPolicyRuleCollection struct {

	//Object0: Mutually exclusive with all other properties
	Object0 *FirewallPolicyRuleCollection_Object0 `json:"object0,omitempty"`

	//Object1: Mutually exclusive with all other properties
	Object1 *FirewallPolicyRuleCollection_Object1 `json:"object1,omitempty"`

	//Object2: Mutually exclusive with all other properties
	Object2 *FirewallPolicyRuleCollection_Object2 `json:"object2,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because FirewallPolicyRuleCollection represents a discriminated union (JSON OneOf)
func (firewallPolicyRuleCollection FirewallPolicyRuleCollection) MarshalJSON() ([]byte, error) {
	if firewallPolicyRuleCollection.Object0 != nil {
		return json.Marshal(firewallPolicyRuleCollection.Object0)
	}
	if firewallPolicyRuleCollection.Object1 != nil {
		return json.Marshal(firewallPolicyRuleCollection.Object1)
	}
	if firewallPolicyRuleCollection.Object2 != nil {
		return json.Marshal(firewallPolicyRuleCollection.Object2)
	}
	return nil, nil
}

//Generated from:
type FirewallPolicyRuleCollection_Status struct {

	//Name: The name of the rule collection.
	Name *string `json:"name,omitempty"`

	//Priority: Priority of the Firewall Policy Rule Collection resource.
	Priority *int `json:"priority,omitempty"`

	// +kubebuilder:validation:Required
	//RuleCollectionType: The type of the rule collection.
	RuleCollectionType FirewallPolicyRuleCollectionStatusRuleCollectionType `json:"ruleCollectionType"`
}

// +kubebuilder:validation:Enum={"FirewallPolicyFilterRuleCollection","FirewallPolicyNatRuleCollection"}
type FirewallPolicyRuleCollectionStatusRuleCollectionType string

const (
	FirewallPolicyRuleCollectionStatusRuleCollectionTypeFirewallPolicyFilterRuleCollection = FirewallPolicyRuleCollectionStatusRuleCollectionType("FirewallPolicyFilterRuleCollection")
	FirewallPolicyRuleCollectionStatusRuleCollectionTypeFirewallPolicyNatRuleCollection    = FirewallPolicyRuleCollectionStatusRuleCollectionType("FirewallPolicyNatRuleCollection")
)

type FirewallPolicyRuleCollection_Object0 struct {

	//Name: The name of the rule collection.
	Name *string `json:"name,omitempty"`

	//Priority: Priority of the Firewall Policy Rule Collection resource.
	Priority *int `json:"priority,omitempty"`

	// +kubebuilder:validation:Required
	RuleCollectionType FirewallPolicyRuleCollectionObject0RuleCollectionType `json:"ruleCollectionType"`
}

type FirewallPolicyRuleCollection_Object1 struct {

	//Action: The action type of a Nat rule collection.
	Action *FirewallPolicyNatRuleCollectionAction `json:"action,omitempty"`

	//Name: The name of the rule collection.
	Name *string `json:"name,omitempty"`

	//Priority: Priority of the Firewall Policy Rule Collection resource.
	Priority *int `json:"priority,omitempty"`

	// +kubebuilder:validation:Required
	RuleCollectionType FirewallPolicyRuleCollectionObject1RuleCollectionType `json:"ruleCollectionType"`

	//Rules: List of rules included in a rule collection.
	Rules []FirewallPolicyRule `json:"rules,omitempty"`
}

type FirewallPolicyRuleCollection_Object2 struct {

	//Action: The action type of a Filter rule collection.
	Action *FirewallPolicyFilterRuleCollectionAction `json:"action,omitempty"`

	//Name: The name of the rule collection.
	Name *string `json:"name,omitempty"`

	//Priority: Priority of the Firewall Policy Rule Collection resource.
	Priority *int `json:"priority,omitempty"`

	// +kubebuilder:validation:Required
	RuleCollectionType FirewallPolicyRuleCollectionObject2RuleCollectionType `json:"ruleCollectionType"`

	//Rules: List of rules included in a rule collection.
	Rules []FirewallPolicyRule `json:"rules,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyFilterRuleCollectionAction
type FirewallPolicyFilterRuleCollectionAction struct {

	//Type: The type of action.
	Type *FirewallPolicyFilterRuleCollectionActionType `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyNatRuleCollectionAction
type FirewallPolicyNatRuleCollectionAction struct {

	//Type: The type of action.
	Type *FirewallPolicyNatRuleCollectionActionType `json:"type,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyRule
type FirewallPolicyRule struct {

	//Object0: Mutually exclusive with all other properties
	Object0 *FirewallPolicyRule_Object0 `json:"object0,omitempty"`

	//Object1: Mutually exclusive with all other properties
	Object1 *FirewallPolicyRule_Object1 `json:"object1,omitempty"`

	//Object2: Mutually exclusive with all other properties
	Object2 *FirewallPolicyRule_Object2 `json:"object2,omitempty"`

	//Object3: Mutually exclusive with all other properties
	Object3 *FirewallPolicyRule_Object3 `json:"object3,omitempty"`
}

// MarshalJSON defers JSON marshaling to the first non-nil property, because FirewallPolicyRule represents a discriminated union (JSON OneOf)
func (firewallPolicyRule FirewallPolicyRule) MarshalJSON() ([]byte, error) {
	if firewallPolicyRule.Object0 != nil {
		return json.Marshal(firewallPolicyRule.Object0)
	}
	if firewallPolicyRule.Object1 != nil {
		return json.Marshal(firewallPolicyRule.Object1)
	}
	if firewallPolicyRule.Object2 != nil {
		return json.Marshal(firewallPolicyRule.Object2)
	}
	if firewallPolicyRule.Object3 != nil {
		return json.Marshal(firewallPolicyRule.Object3)
	}
	return nil, nil
}

// +kubebuilder:validation:Enum={"FirewallPolicyRuleCollection"}
type FirewallPolicyRuleCollectionObject0RuleCollectionType string

const FirewallPolicyRuleCollectionObject0RuleCollectionTypeFirewallPolicyRuleCollection = FirewallPolicyRuleCollectionObject0RuleCollectionType("FirewallPolicyRuleCollection")

// +kubebuilder:validation:Enum={"FirewallPolicyNatRuleCollection"}
type FirewallPolicyRuleCollectionObject1RuleCollectionType string

const FirewallPolicyRuleCollectionObject1RuleCollectionTypeFirewallPolicyNatRuleCollection = FirewallPolicyRuleCollectionObject1RuleCollectionType("FirewallPolicyNatRuleCollection")

// +kubebuilder:validation:Enum={"FirewallPolicyFilterRuleCollection"}
type FirewallPolicyRuleCollectionObject2RuleCollectionType string

const FirewallPolicyRuleCollectionObject2RuleCollectionTypeFirewallPolicyFilterRuleCollection = FirewallPolicyRuleCollectionObject2RuleCollectionType("FirewallPolicyFilterRuleCollection")

// +kubebuilder:validation:Enum={"Allow","Deny"}
type FirewallPolicyFilterRuleCollectionActionType string

const (
	FirewallPolicyFilterRuleCollectionActionTypeAllow = FirewallPolicyFilterRuleCollectionActionType("Allow")
	FirewallPolicyFilterRuleCollectionActionTypeDeny  = FirewallPolicyFilterRuleCollectionActionType("Deny")
)

// +kubebuilder:validation:Enum={"DNAT"}
type FirewallPolicyNatRuleCollectionActionType string

const FirewallPolicyNatRuleCollectionActionTypeDNAT = FirewallPolicyNatRuleCollectionActionType("DNAT")

type FirewallPolicyRule_Object0 struct {

	//Description: Description of the rule.
	Description *string `json:"description,omitempty"`

	//Name: Name of the rule.
	Name *string `json:"name,omitempty"`

	// +kubebuilder:validation:Required
	RuleType FirewallPolicyRuleObject0RuleType `json:"ruleType"`
}

type FirewallPolicyRule_Object1 struct {

	//Description: Description of the rule.
	Description *string `json:"description,omitempty"`

	//DestinationAddresses: List of destination IP addresses or Service Tags.
	DestinationAddresses []string `json:"destinationAddresses,omitempty"`

	//FqdnTags: List of FQDN Tags for this rule.
	FqdnTags []string `json:"fqdnTags,omitempty"`

	//Name: Name of the rule.
	Name *string `json:"name,omitempty"`

	//Protocols: Array of Application Protocols.
	Protocols []FirewallPolicyRuleApplicationProtocol `json:"protocols,omitempty"`

	// +kubebuilder:validation:Required
	RuleType FirewallPolicyRuleObject1RuleType `json:"ruleType"`

	//SourceAddresses: List of source IP addresses for this rule.
	SourceAddresses []string `json:"sourceAddresses,omitempty"`

	//SourceIpGroups: List of source IpGroups for this rule.
	SourceIpGroups []string `json:"sourceIpGroups,omitempty"`

	//TargetFqdns: List of FQDNs for this rule.
	TargetFqdns []string `json:"targetFqdns,omitempty"`

	//TargetUrls: List of Urls for this rule condition.
	TargetUrls []string `json:"targetUrls,omitempty"`

	//TerminateTLS: Terminate TLS connections for this rule.
	TerminateTLS *bool `json:"terminateTLS,omitempty"`
}

type FirewallPolicyRule_Object2 struct {

	//Description: Description of the rule.
	Description *string `json:"description,omitempty"`

	//DestinationAddresses: List of destination IP addresses or Service Tags.
	DestinationAddresses []string `json:"destinationAddresses,omitempty"`

	//DestinationPorts: List of destination ports.
	DestinationPorts []string `json:"destinationPorts,omitempty"`

	//IpProtocols: Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []FirewallPolicyRuleObject2IpProtocols `json:"ipProtocols,omitempty"`

	//Name: Name of the rule.
	Name *string `json:"name,omitempty"`

	// +kubebuilder:validation:Required
	RuleType FirewallPolicyRuleObject2RuleType `json:"ruleType"`

	//SourceAddresses: List of source IP addresses for this rule.
	SourceAddresses []string `json:"sourceAddresses,omitempty"`

	//SourceIpGroups: List of source IpGroups for this rule.
	SourceIpGroups []string `json:"sourceIpGroups,omitempty"`

	//TranslatedAddress: The translated address for this NAT rule.
	TranslatedAddress *string `json:"translatedAddress,omitempty"`

	//TranslatedPort: The translated port for this NAT rule.
	TranslatedPort *string `json:"translatedPort,omitempty"`
}

type FirewallPolicyRule_Object3 struct {

	//Description: Description of the rule.
	Description *string `json:"description,omitempty"`

	//DestinationAddresses: List of destination IP addresses or Service Tags.
	DestinationAddresses []string `json:"destinationAddresses,omitempty"`

	//DestinationFqdns: List of destination FQDNs.
	DestinationFqdns []string `json:"destinationFqdns,omitempty"`

	//DestinationIpGroups: List of destination IpGroups for this rule.
	DestinationIpGroups []string `json:"destinationIpGroups,omitempty"`

	//DestinationPorts: List of destination ports.
	DestinationPorts []string `json:"destinationPorts,omitempty"`

	//IpProtocols: Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []FirewallPolicyRuleObject3IpProtocols `json:"ipProtocols,omitempty"`

	//Name: Name of the rule.
	Name *string `json:"name,omitempty"`

	// +kubebuilder:validation:Required
	RuleType FirewallPolicyRuleObject3RuleType `json:"ruleType"`

	//SourceAddresses: List of source IP addresses for this rule.
	SourceAddresses []string `json:"sourceAddresses,omitempty"`

	//SourceIpGroups: List of source IpGroups for this rule.
	SourceIpGroups []string `json:"sourceIpGroups,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/FirewallPolicyRuleApplicationProtocol
type FirewallPolicyRuleApplicationProtocol struct {

	//Port: Port number for the protocol, cannot be greater than 64000.
	Port *int `json:"port,omitempty"`

	//ProtocolType: Protocol type.
	ProtocolType *FirewallPolicyRuleApplicationProtocolProtocolType `json:"protocolType,omitempty"`
}

// +kubebuilder:validation:Enum={"FirewallPolicyRule"}
type FirewallPolicyRuleObject0RuleType string

const FirewallPolicyRuleObject0RuleTypeFirewallPolicyRule = FirewallPolicyRuleObject0RuleType("FirewallPolicyRule")

// +kubebuilder:validation:Enum={"ApplicationRule"}
type FirewallPolicyRuleObject1RuleType string

const FirewallPolicyRuleObject1RuleTypeApplicationRule = FirewallPolicyRuleObject1RuleType("ApplicationRule")

// +kubebuilder:validation:Enum={"Any","ICMP","TCP","UDP"}
type FirewallPolicyRuleObject2IpProtocols string

const (
	FirewallPolicyRuleObject2IpProtocolsAny  = FirewallPolicyRuleObject2IpProtocols("Any")
	FirewallPolicyRuleObject2IpProtocolsICMP = FirewallPolicyRuleObject2IpProtocols("ICMP")
	FirewallPolicyRuleObject2IpProtocolsTCP  = FirewallPolicyRuleObject2IpProtocols("TCP")
	FirewallPolicyRuleObject2IpProtocolsUDP  = FirewallPolicyRuleObject2IpProtocols("UDP")
)

// +kubebuilder:validation:Enum={"NatRule"}
type FirewallPolicyRuleObject2RuleType string

const FirewallPolicyRuleObject2RuleTypeNatRule = FirewallPolicyRuleObject2RuleType("NatRule")

// +kubebuilder:validation:Enum={"Any","ICMP","TCP","UDP"}
type FirewallPolicyRuleObject3IpProtocols string

const (
	FirewallPolicyRuleObject3IpProtocolsAny  = FirewallPolicyRuleObject3IpProtocols("Any")
	FirewallPolicyRuleObject3IpProtocolsICMP = FirewallPolicyRuleObject3IpProtocols("ICMP")
	FirewallPolicyRuleObject3IpProtocolsTCP  = FirewallPolicyRuleObject3IpProtocols("TCP")
	FirewallPolicyRuleObject3IpProtocolsUDP  = FirewallPolicyRuleObject3IpProtocols("UDP")
)

// +kubebuilder:validation:Enum={"NetworkRule"}
type FirewallPolicyRuleObject3RuleType string

const FirewallPolicyRuleObject3RuleTypeNetworkRule = FirewallPolicyRuleObject3RuleType("NetworkRule")

// +kubebuilder:validation:Enum={"Http","Https"}
type FirewallPolicyRuleApplicationProtocolProtocolType string

const (
	FirewallPolicyRuleApplicationProtocolProtocolTypeHttp  = FirewallPolicyRuleApplicationProtocolProtocolType("Http")
	FirewallPolicyRuleApplicationProtocolProtocolTypeHttps = FirewallPolicyRuleApplicationProtocolProtocolType("Https")
)

func init() {
	SchemeBuilder.Register(&FirewallPoliciesRuleCollectionGroups{}, &FirewallPoliciesRuleCollectionGroupsList{})
}
