// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
// Code generated by k8s-infra-gen. DO NOT EDIT.
package v20200501

import (
	"github.com/Azure/k8s-infra/hack/crossplane/apis/deploymenttemplate/v20150101"
	"github.com/crossplane/crossplane-runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
type VirtualHubsRouteTables struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VirtualHubsRouteTables_Spec   `json:"spec,omitempty"`
	Status            VirtualHubRouteTableV2_Status `json:"status,omitempty"`
}

// +kubebuilder:object:root=true
type VirtualHubsRouteTablesList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VirtualHubsRouteTables `json:"items"`
}

type VirtualHubRouteTableV2_Status struct {
	v1alpha1.ResourceStatus `json:",inline"`
	AtProvider              VirtualHubsRouteTablesObservation `json:"atProvider"`
}

type VirtualHubsRouteTables_Spec struct {
	v1alpha1.ResourceSpec `json:",inline"`
	ForProvider           VirtualHubsRouteTablesParameters `json:"forProvider"`
}

type VirtualHubsRouteTablesObservation struct {

	//Etag: A unique read-only string that changes whenever the resource is updated.
	Etag *string `json:"etag,omitempty"`

	//Id: Resource ID.
	Id *string `json:"id,omitempty"`

	//Name: The name of the resource that is unique within a resource group. This name
	//can be used to access the resource.
	Name *string `json:"name,omitempty"`

	//Properties: Properties of the virtual hub route table v2.
	Properties *VirtualHubRouteTableV2Properties_Status `json:"properties,omitempty"`
}

type VirtualHubsRouteTablesParameters struct {

	// +kubebuilder:validation:Required
	//ApiVersion: API Version of the resource type, optional when apiProfile is used
	//on the template
	ApiVersion VirtualHubsRouteTablesSpecApiVersion `json:"apiVersion"`
	Comments   *string                              `json:"comments,omitempty"`

	//Condition: Condition of the resource
	Condition *bool                   `json:"condition,omitempty"`
	Copy      *v20150101.ResourceCopy `json:"copy,omitempty"`

	//DependsOn: Collection of resources this resource depends on
	DependsOn []string `json:"dependsOn,omitempty"`

	//Location: Location to deploy resource to
	Location *v20150101.ResourceLocations `json:"location,omitempty"`

	// +kubebuilder:validation:Required
	//Name: Name of the resource
	Name string `json:"name"`

	// +kubebuilder:validation:Required
	//Properties: Properties of the virtual hub route table v2.
	Properties                VirtualHubRouteTableV2Properties `json:"properties"`
	ResourceGroupName         string                           `json:"resourceGroupName"`
	ResourceGroupNameRef      *v1alpha1.Reference              `json:"resourceGroupNameRef,omitempty"`
	ResourceGroupNameSelector *v1alpha1.Selector               `json:"resourceGroupNameSelector,omitempty"`

	//Scope: Scope for the resource or deployment. Today, this works for two cases: 1)
	//setting the scope for extension resources 2) deploying resources to the tenant
	//scope in non-tenant scope deployments
	Scope *string `json:"scope,omitempty"`

	//Tags: Name-value pairs to add to the resource
	Tags map[string]string `json:"tags,omitempty"`

	// +kubebuilder:validation:Required
	//Type: Resource type
	Type                    VirtualHubsRouteTablesSpecType `json:"type"`
	VirtualHubsName         string                         `json:"virtualHubsName"`
	VirtualHubsNameRef      *v1alpha1.Reference            `json:"virtualHubsNameRef,omitempty"`
	VirtualHubsNameSelector *v1alpha1.Selector             `json:"virtualHubsNameSelector,omitempty"`
}

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/VirtualHubRouteTableV2Properties
type VirtualHubRouteTableV2Properties struct {

	//AttachedConnections: List of all connections attached to this route table v2.
	AttachedConnections []string `json:"attachedConnections,omitempty"`

	//Routes: List of all routes.
	Routes []VirtualHubRouteV2 `json:"routes,omitempty"`
}

//Generated from:
type VirtualHubRouteTableV2Properties_Status struct {

	//AttachedConnections: List of all connections attached to this route table v2.
	AttachedConnections []string `json:"attachedConnections,omitempty"`

	//ProvisioningState: The provisioning state of the virtual hub route table v2
	//resource.
	ProvisioningState *ProvisioningState_Status `json:"provisioningState,omitempty"`

	//Routes: List of all routes.
	Routes []VirtualHubRouteV2_Status `json:"routes,omitempty"`
}

// +kubebuilder:validation:Enum={"2020-05-01"}
type VirtualHubsRouteTablesSpecApiVersion string

const VirtualHubsRouteTablesSpecApiVersion20200501 = VirtualHubsRouteTablesSpecApiVersion("2020-05-01")

// +kubebuilder:validation:Enum={"Microsoft.Network/virtualHubs/routeTables"}
type VirtualHubsRouteTablesSpecType string

const VirtualHubsRouteTablesSpecTypeMicrosoftNetworkVirtualHubsRouteTables = VirtualHubsRouteTablesSpecType("Microsoft.Network/virtualHubs/routeTables")

//Generated from: https://schema.management.azure.com/schemas/2020-05-01/Microsoft.Network.json#/definitions/VirtualHubRouteV2
type VirtualHubRouteV2 struct {

	//DestinationType: The type of destinations.
	DestinationType *string `json:"destinationType,omitempty"`

	//Destinations: List of all destinations.
	Destinations []string `json:"destinations,omitempty"`

	//NextHopType: The type of next hops.
	NextHopType *string `json:"nextHopType,omitempty"`

	//NextHops: NextHops ip address.
	NextHops []string `json:"nextHops,omitempty"`
}

//Generated from:
type VirtualHubRouteV2_Status struct {

	//DestinationType: The type of destinations.
	DestinationType *string `json:"destinationType,omitempty"`

	//Destinations: List of all destinations.
	Destinations []string `json:"destinations,omitempty"`

	//NextHopType: The type of next hops.
	NextHopType *string `json:"nextHopType,omitempty"`

	//NextHops: NextHops ip address.
	NextHops []string `json:"nextHops,omitempty"`
}

func init() {
	SchemeBuilder.Register(&VirtualHubsRouteTables{}, &VirtualHubsRouteTablesList{})
}
