name: ci
on:
  push:
    branches:
      - master
  pull_request: 
    branches:
      - master
jobs:
  build-docker:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Build docker image
        run: make docker-build
  test-generator:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
        with: 
          submodules: 'true'
      - name: Make test generator
        run: make -C ./hack/generator ci
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: ./hack/generator/coverage.lcov
          flag-name: generator
          parallel: true
  test-controller:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Make integration test
        run: make test-cover-int
        if: ${{ env.AZURE_TENANT_ID != '' }}
      - name: Make test
        run: make test-cover
        if: ${{ env.AZURE_TENANT_ID == '' }}
      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.2
        with:
          infile: cover.out
          outfile: coverage.lcov
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov
          flag-name: controller
          parallel: true
  coveralls-complete:
    needs: [test-controller, test-generator]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
